{
	"version":
		3,
	"file":
		"index.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","transpileModule.ts","default.ts"],
	"sourcesContent":
		[
			"export default '3.0.0';",
			"import Error from '.Error';\nimport throwRangeError from '.throw.RangeError';\nimport undefined from '.undefined';\n\nconst {\n\tcreateSourceFile,\n\tScriptTarget: { ES3, ES5, Latest },\n\tScriptKind: { TS },\n\tSyntaxKind: {\n\t\tTypeAliasDeclaration,\n\t\tTypeAssertionExpression,\n\t\tAsExpression,\n\t\tHeritageClause,\n\t\tIdentifier,\n\t\tFunctionExpression,\n\t\tFunctionDeclaration,\n\t\tClassDeclaration,\n\t\tClassExpression,\n\t\tArrowFunction,\n\t\tMethodDeclaration,\n\t\tGetAccessor,\n\t\tSetAccessor,\n\t\tTypeParameter,\n\t\tVariableDeclaration,\n\t\tPropertyDeclaration,\n\t\tParameter,\n\t\tQuestionToken,\n\t\tCallExpression,\n\t\tNewExpression,\n\t\tIntersectionType,\n\t\tTypeReference,\n\t\tLiteralType,\n\t\tUnionType,\n\t\tTupleType,\n\t\tStringKeyword,\n\t\tNumberKeyword,\n\t\tSymbolKeyword,\n\t\tBooleanKeyword,\n\t\tFunctionType,\n\t\tTypeLiteral,\n\t\tNullKeyword,\n\t\tNeverKeyword,\n\t\tAnyKeyword,\n\t\tObjectKeyword,\n\t\tTypeOperator,\n\t\tBigIntKeyword,\n\t\tUndefinedKeyword,\n\t\tVoidKeyword,\n\t\tArrayType,\n\t\tFirstTypeNode,\n\t\tConditionalType,\n\t\tInterfaceDeclaration,\n\t\tEnumDeclaration,\n\t\tDeclareKeyword,\n\t\tBlock,\n\t\tEndOfFileToken,\n\t\tNonNullExpression,\n\t\tUnknownKeyword,\n\t\tIndexedAccessType,\n\t\tTypeQuery,\n\t\tModuleDeclaration,\n\t},\n\tforEachChild,\n} = require('typescript');\n\nconst S = /\\S/g;\nconst remove = (exp :string) :string => exp.replace(S, ' ');\n\nconst GT = /(?<=^(?:\\s+|\\/(?:\\/.*[\\n\\r\\u2028\\u2029]|\\*[^]*?\\*\\/))*)>/;\nconst removeFirstGT = (exp :string) :string => exp.replace(GT, ' ');\n\nconst THIS = /^(?:\\s+|\\/(?:\\/.*[\\n\\r\\u2028\\u2029]|\\*[^]*?\\*\\/))*this(?:\\s+|\\/(?:\\/.*[\\n\\r\\u2028\\u2029]|\\*[^]*?\\*\\/))*$/;\nconst COMMA = /(?<=^(?:\\s+|\\/(?:\\/.*[\\n\\r\\u2028\\u2029]|\\*[^]*?\\*\\/))*),/;\n\nfunction afterColon (kind :number) :boolean {\n\tswitch ( kind ) {\n\t\tcase IntersectionType:\n\t\tcase TypeReference:\n\t\tcase LiteralType:\n\t\tcase UnionType:\n\t\tcase TupleType:\n\t\tcase StringKeyword:\n\t\tcase NumberKeyword:\n\t\tcase SymbolKeyword:\n\t\tcase BooleanKeyword:\n\t\tcase FunctionType:\n\t\tcase TypeLiteral:\n\t\tcase NullKeyword:\n\t\tcase NeverKeyword:\n\t\tcase AnyKeyword:\n\t\tcase ObjectKeyword:\n\t\tcase TypeOperator:\n\t\tcase BigIntKeyword:\n\t\tcase UndefinedKeyword:\n\t\tcase VoidKeyword:\n\t\tcase ArrayType:\n\t\tcase FirstTypeNode:\n\t\tcase ConditionalType:\n\t\tcase UnknownKeyword:\n\t\tcase IndexedAccessType:\n\t\tcase TypeQuery:\n\t\tcase EnumDeclaration:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nlet ts :string = '';\n\nexport default function transpileModule (input :string, esv? :3 | 5) :{ outputText :string } {\n\ttry {\n\t\treturn {\n\t\t\toutputText:\n\t\t\t\tfrom(\n\t\t\t\t\tcreateSourceFile(\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tts = input,\n\t\t\t\t\t\tesv\n\t\t\t\t\t\t\t? esv===3 ? ES3\n\t\t\t\t\t\t\t: esv===5 ? ES5\n\t\t\t\t\t\t\t\t: throwRangeError('@ltd/j-ts(,esv)')\n\t\t\t\t\t\t\t: Latest,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tTS,\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t};\n\t}\n\tfinally { ts = ''; }\n};\n\nfunction from (node :Node) :string {\n\t// remove import type; export type...// export var type; // import * as\n\tswitch ( node.kind ) {\n\t\tcase TypeAliasDeclaration:\n\t\tcase InterfaceDeclaration:\n\t\tcase ModuleDeclaration:\n\t\t\treturn remove(ts.slice(node.pos, node.end));\n\t\tcase EnumDeclaration:\n\t\t\tthrow Error('enum');\n\t}\n\tlet ts_index :number = node.pos;\n\tlet firstChild :Node | undefined;\n\tforEachChild(node, function (child :Node) {\n\t\tif ( !firstChild && ts_index===child.pos ) { firstChild = child; }\n\t});\n\tif ( firstChild && firstChild.kind===DeclareKeyword ) { return remove(ts.slice(node.pos, node.end)); }\n\tconst es :string[] = [];\n\tswitch ( node.kind ) {\n\t\t//case ReturnStatement:// return|throw|yield <>///*\\n*/1; -> 0,///*\\n*/1,\n\t\t//case ThrowStatement:// (throw 1);\n\t\t//case YieldExpression:\n\t\t//\tbreak;\n\t\tcase TypeAssertionExpression:\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tswitch ( es.length ) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tes.push(ts.slice(ts_index, child.pos-1)+remove(ts.slice(child.pos-1, child.end)));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tes.push(ts.slice(ts_index, child.pos-1)+' '+from(child));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow Error(''+es.length);\n\t\t\t\t}\n\t\t\t\tts_index = child.end;\n\t\t\t});\n\t\t\tif ( es.length!==2 ) { throw Error(''+es.length); }\n\t\t\tbreak;\n\t\tcase AsExpression:\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tswitch ( es.length ) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tes.push(from(child));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tes.push(ts.slice(ts_index, child.pos-2)+remove(ts.slice(child.pos-2, child.end)));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow Error(''+es.length);\n\t\t\t\t}\n\t\t\t\tts_index = child.end;\n\t\t\t});\n\t\t\tif ( es.length!==2 ) { throw Error(''+es.length); }\n\t\t\tbreak;\n\t\tcase HeritageClause:\n\t\t\tlet i :boolean;\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( es.length ) {\n\t\t\t\t\tif ( i ) {\n\t\t\t\t\t\tes.push(remove(ts.slice(ts_index, child.end)));\n\t\t\t\t\t\tts_index = child.end;\n\t\t\t\t\t}\n\t\t\t\t\telse { throw Error(''+es.length); }\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ti = ts.endsWith('implements', child.pos);\n\t\t\t\t\tif ( i ) {\n\t\t\t\t\t\tes.push(ts.slice(ts_index, child.pos-10)+remove(ts.slice(child.pos-10, child.end)));\n\t\t\t\t\t\tts_index = child.end;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tes.push(ts.slice(ts_index, ts_index = child.pos));\n\t\t\t\t\t\tconst children :( Node | number )[] = [];\n\t\t\t\t\t\tforEachChild(child, function (child :Node) {\n\t\t\t\t\t\t\tif ( ts_index!==child.pos ) { children.push(child.pos); }\n\t\t\t\t\t\t\tchildren.push(child);\n\t\t\t\t\t\t\tts_index = child.end;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tes.push(\n\t\t\t\t\t\t\tchildren.length>1 && ( children[0] as Node ).kind===Identifier\n\t\t\t\t\t\t\t\t? ts.slice(( children[0] as Node ).pos, ( children[1] as number )-1)+remove(ts.slice(( children[1] as number )-1, child.end))\n\t\t\t\t\t\t\t\t: from(child)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif ( !es.length ) { throw Error(''+es.length); }\n\t\t\tbreak;\n\t\tcase CallExpression:\n\t\tcase NewExpression:\n\t\t\tconst children :( Node | string )[] = [];\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( ts_index!==child.pos ) { children.push(ts.slice(ts_index, child.pos)); }\n\t\t\t\tchildren.push(child);\n\t\t\t\tts_index = child.end;\n\t\t\t});\n\t\t\tif ( ts_index!==node.end ) { children.push(ts.slice(ts_index, node.end)); }\n\t\t\tif ( node.kind===NewExpression ) { es.push(children.shift() as string); }\n\t\t\tes.push(from(children.shift() as Node));\n\t\t\tif ( !children.length ) { break; }\n\t\t\tif ( ( children[0] as string ).endsWith('<') ) {\n\t\t\t\tes.push(( children.shift() as string ).slice(0, -1)+' ');\n\t\t\t\twhile ( children.length ) {\n\t\t\t\t\tconst child :Node | string = children.shift()!;\n\t\t\t\t\tif ( typeof child==='string' ) {\n\t\t\t\t\t\tif ( GT.test(child) ) {\n\t\t\t\t\t\t\tes.push(removeFirstGT(child));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse { es.push(remove(child)); }\n\t\t\t\t\t}\n\t\t\t\t\telse { es.push(remove(ts.slice(child.pos, child.end))); }\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile ( children.length ) {\n\t\t\t\tconst child :Node | string = children.shift()!;\n\t\t\t\tif ( typeof child==='string' ) { es.push(child); }\n\t\t\t\telse { es.push(from(child)); }\n\t\t\t}\n\t\t\tbreak;\n\t\tcase FunctionDeclaration:\n\t\tcase MethodDeclaration: {\n\t\t\tlet declaration = true;\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( declaration && child.kind===Block ) { declaration = false; }\n\t\t\t});\n\t\t\tif ( declaration ) { return remove(ts.slice(node.pos, node.end)); }\n\t\t}\n\t\tcase FunctionExpression:\n\t\tcase GetAccessor:\n\t\tcase SetAccessor:\n\t\t\tlet notYet :boolean = true;\n\t\t\tlet thisNode :Node | undefined;\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( thisNode ) {\n\t\t\t\t\tconst { end } :Node = thisNode;\n\t\t\t\t\tthisNode.end = end+ts.slice(end, child.pos).search(COMMA)+1;\n\t\t\t\t\tthisNode = undefined;\n\t\t\t\t}\n\t\t\t\tif ( notYet && child.kind===Parameter ) {\n\t\t\t\t\tnotYet = false;\n\t\t\t\t\tconst maybeThis :string = from(child);\n\t\t\t\t\tif ( THIS.test(maybeThis) ) {\n\t\t\t\t\t\tchild.kind = TypeAliasDeclaration;\n\t\t\t\t\t\tthisNode = child;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tcase ClassDeclaration:\n\t\tcase ClassExpression:\n\t\tcase ArrowFunction:\n\t\t\tlet gt :boolean = false;\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( child.kind===TypeParameter ) {\n\t\t\t\t\tif ( gt ) { es.push(remove(ts.slice(ts_index, child.end))); }\n\t\t\t\t\telse {\n\t\t\t\t\t\tes.push(ts.slice(ts_index, child.pos-1)+remove(ts.slice(child.pos-1, child.end)));\n\t\t\t\t\t\tgt = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ( afterColon(child.kind) ) {\n\t\t\t\t\tif ( gt ) {\n\t\t\t\t\t\tgt = false;\n\t\t\t\t\t\tes.push(removeFirstGT(ts.slice(ts_index, child.pos-1))+' ');\n\t\t\t\t\t}\n\t\t\t\t\telse { es.push(ts.slice(ts_index, child.pos-1)+' '); }\n\t\t\t\t\tes.push(remove(ts.slice(child.pos, child.end)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif ( gt ) {\n\t\t\t\t\t\tgt = false;\n\t\t\t\t\t\tes.push(removeFirstGT(ts.slice(ts_index, child.pos)));\n\t\t\t\t\t}\n\t\t\t\t\telse if ( ts_index!==child.pos ) { es.push(ts.slice(ts_index, child.pos)); }\n\t\t\t\t\tes.push(from(child));\n\t\t\t\t}\n\t\t\t\tts_index = child.end;\n\t\t\t});\n\t\t\tif ( ts_index!==node.end ) { es.push(ts.slice(ts_index, node.end)); }\n\t\t\tbreak;\n\t\tcase VariableDeclaration:\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( ts_index===child.pos ) { es.push(from(child)); }\n\t\t\t\telse if ( afterColon(child.kind) ) { es.push(ts.slice(ts_index, child.pos-1)+remove(ts.slice(child.pos-1, child.end))); }\n\t\t\t\telse { es.push(ts.slice(ts_index, child.pos)+from(child)); }\n\t\t\t\tts_index = child.end;\n\t\t\t});\n\t\t\tif ( ts_index!==node.end ) { es.push(ts.slice(ts_index, node.end)); }\n\t\t\tbreak;\n\t\tcase PropertyDeclaration:\n\t\t\tlet declaration = true;\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( ts_index===child.pos ) { es.push(from(child)); }\n\t\t\t\telse if ( afterColon(child.kind) ) { es.push(ts.slice(ts_index, child.pos-1)+remove(ts.slice(child.pos-1, child.end))); }\n\t\t\t\telse {\n\t\t\t\t\tif ( declaration && ts[child.pos-1]==='=' ) { declaration = false; }\n\t\t\t\t\tes.push(ts.slice(ts_index, child.pos)+from(child));\n\t\t\t\t}\n\t\t\t\tts_index = child.end;\n\t\t\t});\n\t\t\tif ( ts_index!==node.end ) { es.push(ts.slice(ts_index, node.end)); }\n\t\t\tif ( declaration ) { return remove(ts.slice(node.pos, node.end)); }\n\t\t\tbreak;\n\t\tcase Parameter:\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( afterColon(child.kind) ) { es.push(ts.slice(ts_index, child.pos-1)+remove(ts.slice(child.pos-1, child.end))); }\n\t\t\t\telse if ( child.kind===QuestionToken ) { es.push(ts.slice(ts_index, child.end-1)+' '); }\n\t\t\t\telse {\n\t\t\t\t\tif ( ts_index!==child.pos ) { es.push(ts.slice(ts_index, child.pos)); }\n\t\t\t\t\tes.push(from(child));\n\t\t\t\t}\n\t\t\t\tts_index = child.end;\n\t\t\t});\n\t\t\tif ( ts_index!==node.end ) { es.push(ts.slice(ts_index, node.end)); }\n\t\t\tbreak;\n\t\tcase NonNullExpression:\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( ts_index!==child.pos ) { es.push(ts.slice(ts_index, child.pos)); }\n\t\t\t\tes.push(from(child));\n\t\t\t\tts_index = child.end;\n\t\t\t});\n\t\t\tes.push(ts.slice(ts_index, node.end-1)+' ');\n\t\t\tbreak;\n\t\tcase EndOfFileToken:\n\t\t\tif ( node.pos!==node.end ) { es.push(ts.slice(node.pos, node.end)); }\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tforEachChild(node, function (child :Node) {\n\t\t\t\tif ( ts_index!==child.pos ) { es.push(ts.slice(ts_index, child.pos)); }\n\t\t\t\tes.push(from(child));\n\t\t\t\tts_index = child.end;\n\t\t\t});\n\t\t\tif ( ts_index!==node.end ) { es.push(ts.slice(ts_index, node.end)); }\n\t\t\tbreak;\n\t}\n\treturn es.join('');\n}\n\ntype Node = { kind :number, pos :number, end :number };",
			"import version from './version?text';\nimport transpileModule from './transpileModule';\nimport Default from '.default';\nexport default Default(transpileModule, {\n\ttranspileModule,\n\tversion,\n});"
		],
	"names":
		["undefined"],
	"mappings":
		"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"
}