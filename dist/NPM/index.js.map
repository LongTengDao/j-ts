{
	"version":
		3,
	"file":
		"index.js",
	"sourceRoot":
		"../../src/",
	"sources":
		["version?text","deps.ts","transpileModule/ing.ts","transpileModule/util.ts","transpileModule/TSX/toJSX.ts","../../j-es/lib/reserved-word/dist.js","../../j-es/lib/unicode/dist.js","../../j-es/src/Literal.ts","../../j-es/src/Name.ts","transpileModule/TSX/toJS.ts","transpileModule/TSX/.ts","transpileModule/erase/InsertableType.ts","transpileModule/erase/ArgumentType.ts","transpileModule/erase/FunctionType.ts","transpileModule/erase/ClassType.ts","transpileModule/erase/FieldType.ts","transpileModule/erase/VariableType.ts","transpileModule/erase/.ts","transpileModule/.ts","default.ts"],
	"sourcesContent":
		[
			"export default'10.2.0';",
			"export const {\n\ttranspileModule: TypeScript_transpileModule,\n\tcreateSourceFile,\n\tforEachChild,\n\tJsxEmit: { None, Preserve, React, ReactNative, ReactJSX, ReactJSXDev },\n\tScriptTarget: { ESNext },\n\tScriptKind: { TS, TSX },\n\tSyntaxKind,\n}                              = require('typescript');\n\nexport const {\n\tTypeAliasDeclaration,\n\tTypeAssertionExpression,\n\tAsExpression,\n\tHeritageClause,\n\tFunctionExpression,\n\tFunctionDeclaration,\n\tClassDeclaration,\n\tClassExpression,\n\tArrowFunction,\n\tMethodDeclaration,\n\tGetAccessor,\n\tSetAccessor,\n\tTypeParameter,\n\tVariableDeclaration,\n\tPropertyDeclaration,\n\tParameter,\n\tQuestionToken,\n\tCallExpression,\n\tNewExpression,\n\tInterfaceDeclaration,\n\tEnumDeclaration,\n\tDeclareKeyword,\n\tBlock,\n\t//EndOfFileToken,\n\tNonNullExpression,\n\tModuleDeclaration,\n\tReadonlyKeyword,\n\tPrivateKeyword,\n\tProtectedKeyword,\n\tPublicKeyword,\n\tExportAssignment,\n\tImportEqualsDeclaration,\n\tReturnStatement,\n\tThrowStatement,\n\tYieldExpression,\n\tIndexSignature,\n\tAbstractKeyword,\n\t//NamespaceExportDeclaration,\n\tExportDeclaration,\n\tImportDeclaration,\n\tImportClause,\n\tConstructor,\n\tExclamationToken,\n\tExpressionWithTypeArguments,\n\tTaggedTemplateExpression,\n\tOverrideKeyword,\n\tEqualsGreaterThanToken,\n\tJsxElement,\n\tJsxSelfClosingElement,\n\tJsxOpeningElement,\n\tJsxClosingElement,\n\tJsxFragment,\n\tJsxOpeningFragment,\n\tJsxClosingFragment,\n\tJsxAttribute,\n\tJsxAttributes,\n\tJsxSpreadAttribute,\n\tJsxExpression,\n\tJsxText,\n\t//JsxTextAllWhiteSpaces,\n\tBinaryExpression,\n\tCommaToken,\n\tIdentifier,\n\tObjectLiteralExpression,\n\tShorthandPropertyAssignment,\n\tSpreadAssignment,\n\tPropertyAssignment,\n\tComputedPropertyName,\n\tStringLiteral,\n\tImplementsKeyword,\n\tExtendsKeyword,\n\tStaticKeyword,\n\tAsyncKeyword,\n\tExportKeyword,\n\tConstKeyword,///\n\tDefaultKeyword,///\n\tNamedImports,\n\tNamedExports,\n} = SyntaxKind;\n\n                                                     \n                                                    \n                                                  \n\n                                       \n                                                             \n                                         \n                                                     \n                                                     \n                                                       \n                                                       \n                                             \n                                           \n                                                       \n                                             \n                                       \n                                                   \n                                             \n                                                           \n                                       \n                                                     \n                                           \n                                             \n                                                                 \n                                                               \n                                                               \n                                                               \n                                                     \n                                                         \n                                                     \n                                                   \n                                           \n                                                                         \n                                                 \n                                               \n                                                 \n                                                     \n                                                       \n                                                   \n                                                 \n                                             \n                                                         \n                                                         \n                                                     \n                                                 \n                                                                 \n                                           \n                                           \n\n                                      ",
			"import Error from '.Error';\nimport TypeError from '.TypeError';\nimport undefined from '.undefined';\n\nlet ing          = false;\n\nexport const on = ()       => {\n\tif ( ing ) { throw Error(`transpiling`); }\n\ting = true;\n};\n\nexport let ts         = '';\nexport const set_ts = (value        )       => {\n\tif ( typeof value!=='string' ) { throw TypeError(`transpileModule(!string)`); }\n\tts = value;\n};\n\nexport let filename                    ;\nexport const set_filename = (value                    )       => {\n\tif ( typeof value==='string' ) { filename = value; }\n\telse if ( value!==undefined ) { throw TypeError(`transpileModule(,,!string)`); }\n};\n\nexport const off = ()       => {\n\tts = '';\n\tfilename = undefined;\n\ting = false;\n};\n",
			"import Error from '.Error';\nimport test from '.RegExp.prototype.test';\nimport push from '.Array.prototype.push';\nimport apply from '.Reflect.apply';\nimport undefined from '.undefined';\n\nimport * as deps from '../deps';\nimport * as ing from './ing';\n\nexport let erase                                                           ;\nexport const set_erase =                                                                       (value   )    => erase = value;\n\nexport const EOL = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const INDEX_OF_EOL = /[\\n\\r\\u2028\\u2029]/;\nexport const INCLUDES_EOL = /*#__PURE__*/test.bind(INDEX_OF_EOL);\nexport const WHITESPACES_AND_COMMENT = /\\s|\\/(?:\\/.*|\\*[^]*?\\*\\/)/gy;\nexport const CHAR_NOT_EOL = /*#__PURE__*/test.bind(/[^\\n\\r/\\u2028\\u2029]/);\nexport const FIRST_MAYBE_SECOND_WHITESPACE = /^[^\\n\\r/\\u2028\\u2029]{1,2}/;\nexport const TAB_INDENT = /^(?:[\\n\\r\\u2028\\u2029]\\t*)+/;\nexport const SPACE_INDENT = /^(?:[\\n\\r\\u2028\\u2029] *)+/;\n\nexport const min = (a        , b        ) => a<b ? a : b;\n\nexport const slice = (start        , end         ) => ing.ts.slice(start, end);\nexport const codeOf = (range                        ) => ing.ts.slice(range.pos, range.end);\n\nexport const throwPosError = (index        , message        )        => {\n\tif ( ing.filename!==undefined ) {\n\t\tconst linesBeforeError = ing.ts.slice(0, index).split(EOL);\n\t\tconst errorLineNumber = linesBeforeError.length;\n\t\tmessage += `\\n    at (${ing.filename}:${errorLineNumber}:${linesBeforeError[errorLineNumber - 1] .length + 1})`;\n\t}\n\tconst error                             = Error(message);\n\terror.index = index;\n\tthrow error;\n};\n\nconst LEADING_WHITESPACE_OR_COMMENT = /*#__PURE__*/( () => {\n\tconst re = /\\s+|\\/(?:\\/.*|\\*[^]*?\\*\\/)/y;\n\tre.test = test;\n\treturn re;\n} )();\nconst AT$_$ = /@\\S+\\s+.*(?:$|[\\n\\r\\u2028\\u2029])/g;\nexport function * readAT                   (            exec                                          )                           {\n\tlet lastIndex = LEADING_WHITESPACE_OR_COMMENT.lastIndex = 0;\n\twhile ( LEADING_WHITESPACE_OR_COMMENT.test(ing.ts) ) {\n\t\tif ( ing.ts[lastIndex]==='/' ) {\n\t\t\tconst all = ( ing.ts[lastIndex + 1]==='/'\n\t\t\t\t\t? ing.ts.slice(lastIndex + 2)\n\t\t\t\t\t: ing.ts.slice(lastIndex + 2, LEADING_WHITESPACE_OR_COMMENT.lastIndex - 2)\n\t\t\t).match(AT$_$);\n\t\t\tif ( all ) {\n\t\t\t\tconst valid = ing.ts.startsWith('/**', lastIndex) && ing.ts[lastIndex + 3]!=='*';\n\t\t\t\tfor ( const each of all ) {\n\t\t\t\t\tconst _$ = exec(each.slice(1));\n\t\t\t\t\tif ( _$ ) {\n\t\t\t\t\t\tvalid || throwPosError(lastIndex, `a JSDoc comment should start with \"/**\"`);\n\t\t\t\t\t\tyield _$;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlastIndex = LEADING_WHITESPACE_OR_COMMENT.lastIndex;\n\t}\n}\n\nconst S = /\\S/g;\nexport const eraseCode = (code        ) => code.replace(S, ' ');\nexport const eraseBetween = (start        , end        ) => ing.ts.slice(start, end).replace(S, ' ');\nexport const eraseRange = (range                        ) => ing.ts.slice(range.pos, range.end).replace(S, ' ');\n\nconst LEADING_WHITESPACES_AND_COMMENT = /^(?:\\s+|\\/(?:\\/.*|\\*[^]*?\\*\\/))+/;\nexport const trimBefore = (_real        ) => _real.replace(LEADING_WHITESPACES_AND_COMMENT, '');\nexport const RealPos = ({ pos, end }                        ) => end - trimBefore(ing.ts.slice(pos, end)).length;\n\nconst COMMENT = /\\/(?:\\/.*|\\*[^]*?\\*\\/)/g;\nexport const IndexAfterD = (beforeColon        ) => beforeColon.replace(COMMENT, eraseCode).lastIndexOf(')') + 1;\n\nexport const eraseFirstGT = (_gt$        ) => {\n\tconst gt$ = trimBefore(_gt$);\n\treturn _gt$.slice(0, -gt$.length) + ' ' + gt$.slice(1);\n};\n\n                             \n\t                    \n\t                    \n\t                     \n\t                                          \n\t                                        \n  \n                                                        \n                                           \n                                                                                                           \nlet childNodes                    = null;\nlet childNodes_writable = false;\nconst pushNode = (node      )        => {\n\tif ( childNodes ) {\n\t\tif ( childNodes_writable ) { ( childNodes           )[childNodes.length] = node; }\n\t\telse {\n\t\t\tchildNodes = [ ...childNodes, node ];\n\t\t\tchildNodes_writable = true;\n\t\t}\n\t}\n\telse {\n\t\tchildNodes = [ node ];\n\t\tchildNodes_writable = true;\n\t}\n\treturn false;\n};\nconst pushNodes = (nodes                 )        => {\n\tif ( childNodes ) {\n\t\tif ( childNodes_writable ) { apply(push, childNodes          , nodes); }\n\t\telse {\n\t\t\tchildNodes = [ ...childNodes, ...nodes ];\n\t\t\tchildNodes_writable = true;\n\t\t}\n\t}\n\telse { childNodes = nodes; }\n\treturn false;\n};\nexport const ChildNodes = (node      )                    => {\n\ttry {\n\t\tdeps.forEachChild(node       , pushNode, pushNodes);\n\t\treturn childNodes;\n\t}\n\tfinally { childNodes = null; }\n};\nconst CHILDREN = []         ;\nexport const Children = (node      )           => {\n\tlet ts_index = node.pos;\n\tconst childNodes = ChildNodes(node);\n\tif ( childNodes ) {\n\t\tconst children                      = [];\n\t\tlet children_length = 0;\n\t\tfor ( const child of childNodes ) {\n\t\t\tif ( ts_index!==child.pos ) { children[children_length++] = ing.ts.slice(ts_index, child.pos); }\n\t\t\tchildren[children_length++] = child;\n\t\t\tts_index = child.end;\n\t\t}\n\t\tif ( ts_index!==node.end ) { children[children_length] = ing.ts.slice(ts_index, node.end); }\n\t\treturn children;\n\t}\n\treturn ts_index===node.end ? CHILDREN : [ ing.ts.slice(ts_index, node.end) ];\n};\n\nconst search = /[A-Z]+/g;\nconst replacer = (A2Z        ) => A2Z.toLowerCase();\nexport const A2a = (string        ) => string.replace(search, replacer);\n",
			"import * as deps from '../../deps';\nimport * as ing from '../ing';\nimport * as util from '../util';\n\nexport const throwUnicode = (ts_index        , who        ) => {\n\tconst _$ = util.slice(ts_index);\n\tconst $ = util.trimBefore(_$);\n\tfor ( const unicode of $ ) {\n\t\tutil.throwPosError(ts_index + ( _$.length - $.length ), `${who} is interrupted by invalid character \"${unicode}\"`);\n\t}\n};\nexport const ensureD$ = (parent                                              , whose        )       => {\n\tparent.expression .end!==parent.end && ing.ts[parent.end - 1]==='}' || util.throwPosError(parent.expression .pos - 1, `${whose} expression is not closed`);\n};\nexport const ensureGT$ = (node  \n\t                                                 \n\t                            \n\t                                                   \n)       => {\n\tif ( node.pos!==node.end && ing.ts[node.end - 1]==='>' ) { return; }\n\tconst who =\n\t\tnode.pos===node.end\n\t\t\t? node.kind===deps.JsxClosingElement ? 'element' : 'fragment'\n\t\t\t:\n\t\t\t\tnode.kind===deps.JsxOpeningElement ? 'element opening tag' :\n\t\t\t\tnode.kind===deps.JsxClosingElement ? 'element closing tag' :\n\t\t\t\tnode.kind===deps.JsxSelfClosingElement ? 'self-closing element tag' :\n\t\t\t\tnode.kind===deps.JsxOpeningFragment ? 'fragment opening tag' :\n\t\t\t\tnode.kind===deps.JsxClosingFragment ? 'fragment closing tag' :\n\t\t\t'';\n\tconst rest = util.trimBefore(util.slice(node.end));\n\tif ( rest ) {\n\t\tfor ( const unicode of rest ) {\n\t\t\tutil.throwPosError(node.pos, `${who} is ${rest ? `not closed` : `interrupted by invalid character \"${unicode}\"`}`);\n\t\t}\n\t}\n\telse { util.throwPosError(node.pos, `${who} is not closed`); }\n};\n\nexport function Generator (            node           )                                       {\n\tswitch ( node.kind ) {\n\t\tcase deps.JsxSelfClosingElement: return SelfClosingElementGenerator(node                              );\n\t\tcase deps.JsxElement: return ElementGenerator(node                   );\n\t\tcase deps.JsxFragment: return FragmentGenerator(node                    );\n\t}\n\treturn null;\n}\nfunction * FragmentGenerator (            node                  )                                {\n\t/* opening */\n\tensureGT$(node.openingFragment);\n\tyield util.codeOf(node.openingFragment);\n\t/* children */\n\tif ( node.children.length ) { yield * Children(node); }\n\t/* closing */\n\tensureGT$(node.closingFragment);\n\tyield util.codeOf(node.closingFragment);\n}\nfunction * SelfClosingElementGenerator (            node                            )                                {\n\t/* opening */\n\tyield * Opening(node);\n\t/* closing */\n\tensureGT$(node);\n}\nfunction * ElementGenerator (            node                 )                                {\n\t/* opening */\n\tyield * Opening(node.openingElement);\n\t/* children */\n\tif ( node.children.length ) { yield * Children(node); }\n\t/* closing */\n\tensureGT$(node.closingElement);\n\tyield util.codeOf(node.closingElement);\n}\n\nexport function * Opening (            node                                                     )                                {\n\tconst { tagName, typeArguments, attributes } = node;\n\t/* type */\n\tyield util.slice(node.pos, tagName.end);\n\tif ( typeArguments ) { yield util.slice(tagName.end, typeArguments.pos - 1) + util.eraseBetween(typeArguments.pos - 1, attributes.pos); }\n\t/* attributes */\n\tattributes.properties.length\n\t\t? yield * Attributes(attributes)\n\t\t: attributes.pos===attributes.end || throwUnicode(attributes.pos/*, attributes.end*/, `tag`);\n\tensureGT$(node                                                       );\n\tyield util.slice(attributes.end, node.end);\n}\n\nexport function * Children (            { children }                                    )                                {\n\tconst { length } = children;\n\tlet index = 0;\n\tdo {\n\t\tconst child = children[index] ;\n\t\tswitch ( child.kind ) {\n\t\t\tcase deps.JsxText:\n\t\t\t\tyield util.codeOf(child);\n\t\t\t\tbreak;\n\t\t\tcase deps.JsxExpression:\n\t\t\t\tconst { expression } = child;\n\t\t\t\tif ( expression ) {\n\t\t\t\t\tensureD$(child, `child`);\n\t\t\t\t\tyield util.slice(child.pos, expression.pos);\n\t\t\t\t\tyield * util.erase(expression);\n\t\t\t\t\tyield util.slice(expression.end, child.end);\n\t\t\t\t}\n\t\t\t\telse { yield util.codeOf(child); }\n\t\t\t\tbreak;\n\t\t\tcase deps.JsxElement:\n\t\t\t\tyield * ElementGenerator(child                   );\n\t\t\t\tbreak;\n\t\t\tcase deps.JsxSelfClosingElement:\n\t\t\t\tyield * Opening(child                              );\n\t\t\t\tbreak;\n\t\t\tcase deps.JsxFragment:\n\t\t\t\tyield * FragmentGenerator(child                    );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow util.throwPosError(( child              ).pos, `@ltd/j-ts does not know about child kind ${deps.SyntaxKind[( child              ).kind]}`);\n\t\t}\n\t}\n\twhile ( ++index!==length );\n}\n\nfunction * Attributes (            { properties }                    )                                {\n\tlet ts_index = properties.pos;\n\tconst lastIndex = properties.length - 1;\n\tlet index = 0;\n\tlet isLast = !lastIndex;\n\tfor ( ; ; ) {\n\t\tconst attr = properties[index] ;\n\t\tattr.pos===ts_index || throwUnicode(ts_index/*, attr.pos*/, `tag`);\n\t\tts_index = attr.end;\n\t\tif ( attr.kind===deps.JsxSpreadAttribute ) {\n\t\t\tconst { expression } = attr;\n\t\t\tensureD$(attr, `JsxSpreadAttribute`);\n\t\t\tyield util.slice(attr.pos, expression.pos);\n\t\t\tyield * util.erase(expression);\n\t\t\tyield util.slice(expression.end, ts_index);\n\t\t}\n\t\telse if ( attr.kind===deps.JsxAttribute ) {\n\t\t\tconst { initializer } = attr;\n\t\t\tif ( initializer ) {\n\t\t\t\tif ( initializer.kind===deps.JsxExpression ) {\n\t\t\t\t\tensureD$(initializer, `attribute value`);\n\t\t\t\t\tconst { expression } = initializer;\n\t\t\t\t\tif ( expression ) {\n\t\t\t\t\t\tyield util.slice(properties.pos, expression.pos);\n\t\t\t\t\t\tyield * util.erase(expression);\n\t\t\t\t\t\tyield util.slice(expression.end, properties.end);\n\t\t\t\t\t}\n\t\t\t\t\telse { yield util.codeOf(attr); }\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst _$value$ = util.codeOf(initializer);\n\t\t\t\t\tconst $value$ = util.trimBefore(_$value$);\n\t\t\t\t\tconst indexOfQuote = initializer.pos + ( _$value$.length - $value$.length );\n\t\t\t\t\t$value$.length>1 && $value$[$value$.length - 1]===$value$[0] || util.throwPosError(indexOfQuote, `attribute value string literal is not closed`);\n\t\t\t\t\tyield util.codeOf(attr);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t!attr.name || attr.name.end===properties.end || util.throwPosError(properties.end - 1, `there must be a quoted string or an expression after attribute =`);\n\t\t\t\tyield util.codeOf(attr);\n\t\t\t}\n\t\t}\n\t\telse { util.throwPosError(util.RealPos(attr             ), `${deps.SyntaxKind[( attr              ).kind]}`); }\n\t\tif ( isLast ) {\n\t\t\tproperties.end===ts_index || throwUnicode(ts_index/*, properties.end*/, `tag`);\n\t\t\tbreak;\n\t\t}\n\t\tisLast = ++index===lastIndex;\n\t}\n}\n",
			"\nexport var RESERVED_WORD_ES3 = /^(?:break|c(?:a(?:se|tch)|lass|on(?:st|tinue))|d(?:o|e(?:bugger|fault|lete))|e(?:lse|num|x(?:port|tends))|f(?:alse|inally|or|unction)|i(?:f|mport|n(?:stanceof)?)|n(?:ew|ull)|return|s(?:uper|witch)|t(?:h(?:is|row)|r(?:y|ue)|ypeof)|v(?:ar|oid)|w(?:hile|ith))$/;\n\nexport var RESERVED_WORD_ESM = /^(?:arguments|break|c(?:a(?:se|tch)|lass|on(?:st|tinue))|d(?:o|e(?:bugger|fault|lete))|e(?:lse|num|val|x(?:port|tends))|f(?:alse|inally|or|unction)|i(?:f|mp(?:lements|ort)|n(?:stanceof|terface)?)|let|n(?:ew|ull)|p(?:ackage|r(?:ivate|otected)|ublic)|return|s(?:tatic|uper|witch)|t(?:h(?:is|row)|r(?:y|ue)|ypeof)|v(?:ar|oid)|w(?:hile|ith)|yield)$/;\n",
			"\nexport var IDENTIFIER_NAME_ES6 = /^(?:[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDEC0-\\uDEEB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u07FD\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D3-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u09FE\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CD0-\\u1CD2\\u1CD4-\\u1CFA\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEF\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7C6\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB67\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD27\\uDD30-\\uDD39\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF50\\uDFE0-\\uDFF6]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD44-\\uDD46\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDC9-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3B-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC5E\\uDC5F\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDC00-\\uDC3A\\uDCA0-\\uDCE9\\uDCFF\\uDDA0-\\uDDA7\\uDDAA-\\uDDD7\\uDDDA-\\uDDE1\\uDDE3\\uDDE4\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE99\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD8E\\uDD90\\uDD91\\uDD93-\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF6]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF4F-\\uDF87\\uDF8F-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A\\uDD00-\\uDD2C\\uDD30-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])*$/;\n\nexport var IDENTIFIER_NAME_ES5 = /^[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u021F\\u0222-\\u0233\\u0250-\\u02AD\\u02B0-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u037A\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D7\\u03DA-\\u03F3\\u0400-\\u0481\\u048C-\\u04C4\\u04C7\\u04C8\\u04CB\\u04CC\\u04D0-\\u04F5\\u04F8\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0640-\\u064A\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06FA-\\u06FC\\u0710\\u0712-\\u072C\\u0780-\\u07A5\\u0905-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60\\u0D61\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6A\\u0F88-\\u0F8B\\u1000-\\u1021\\u1023-\\u1027\\u1029\\u102A\\u1050-\\u1055\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1206\\u1208-\\u1246\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1286\\u1288\\u128A-\\u128D\\u1290-\\u12AE\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12CE\\u12D0-\\u12D6\\u12D8-\\u12EE\\u12F0-\\u130E\\u1310\\u1312-\\u1315\\u1318-\\u131E\\u1320-\\u1346\\u1348-\\u135A\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u1780-\\u17B3\\u1820-\\u1877\\u1880-\\u18A8\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u207F\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2131\\u2133-\\u2139\\u2160-\\u2183\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303A\\u3041-\\u3094\\u309D\\u309E\\u30A1-\\u30FA\\u30FC-\\u30FE\\u3105-\\u312C\\u3131-\\u318E\\u31A0-\\u31B7\\u3400-\\u4DB5\\u4E00-\\u9FA5\\uA000-\\uA48C\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC][\\$0-9A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u021F\\u0222-\\u0233\\u0250-\\u02AD\\u02B0-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u02EE\\u0300-\\u034E\\u0360-\\u0362\\u037A\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D7\\u03DA-\\u03F3\\u0400-\\u0481\\u0483-\\u0486\\u048C-\\u04C4\\u04C7\\u04C8\\u04CB\\u04CC\\u04D0-\\u04F5\\u04F8\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05A1\\u05A3-\\u05B9\\u05BB-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0640-\\u0655\\u0660-\\u0669\\u0670-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06FC\\u0710-\\u072C\\u0730-\\u074A\\u0780-\\u07B0\\u0901-\\u0903\\u0905-\\u0939\\u093C-\\u094D\\u0950-\\u0954\\u0958-\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A02\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A74\\u0A81-\\u0A83\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B36-\\u0B39\\u0B3C-\\u0B43\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE7-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D60\\u0D61\\u0D66-\\u0D6F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC\\u0EDD\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6A\\u0F71-\\u0F84\\u0F86-\\u0F8B\\u0F90-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1021\\u1023-\\u1027\\u1029\\u102A\\u102C-\\u1032\\u1036-\\u1039\\u1040-\\u1049\\u1050-\\u1059\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1206\\u1208-\\u1246\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1286\\u1288\\u128A-\\u128D\\u1290-\\u12AE\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12CE\\u12D0-\\u12D6\\u12D8-\\u12EE\\u12F0-\\u130E\\u1310\\u1312-\\u1315\\u1318-\\u131E\\u1320-\\u1346\\u1348-\\u135A\\u1369-\\u1371\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u1780-\\u17D3\\u17E0-\\u17E9\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18A9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u207F\\u20D0-\\u20DC\\u20E1\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2131\\u2133-\\u2139\\u2160-\\u2183\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303A\\u3041-\\u3094\\u3099\\u309A\\u309D\\u309E\\u30A1-\\u30FE\\u3105-\\u312C\\u3131-\\u318E\\u31A0-\\u31B7\\u3400-\\u4DB5\\u4E00-\\u9FA5\\uA000-\\uA48C\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE20-\\uFE23\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF65-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]*$/;\n\nexport var IDENTIFIER_NAME_ES3 = /^[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02B0-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u037A\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0490-\\u04C4\\u04C7\\u04C8\\u04CB\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0640-\\u064A\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5\\u06E5\\u06E6\\u0905-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B36-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CDE\\u0CE0\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D60\\u0D61\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F69\\u0F88-\\u0F8B\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u207F\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2131\\u2133-\\u2138\\u2160-\\u2182\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3041-\\u3094\\u309D\\u309E\\u30A1-\\u30FA\\u30FC-\\u30FE\\u3105-\\u312C\\u3131-\\u318E\\u4E00-\\u9FA5\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC][\\$0-9A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u01F5\\u01FA-\\u0217\\u0250-\\u02A8\\u02B0-\\u02B8\\u02BB-\\u02C1\\u02D0\\u02D1\\u02E0-\\u02E4\\u0300-\\u0345\\u0360\\u0361\\u037A\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03CE\\u03D0-\\u03D6\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2-\\u03F3\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E-\\u0481\\u0483-\\u0486\\u0490-\\u04C4\\u04C7\\u04C8\\u04CB\\u04CC\\u04D0-\\u04EB\\u04EE-\\u04F5\\u04F8\\u04F9\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05A1\\u05A3-\\u05B9\\u05BB-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u063A\\u0640-\\u0652\\u0660-\\u0669\\u0670-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0901-\\u0903\\u0905-\\u0939\\u093C-\\u094D\\u0950-\\u0954\\u0958-\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A02\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A74\\u0A81-\\u0A83\\u0A85-\\u0A8B\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B36-\\u0B39\\u0B3C-\\u0B43\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB5\\u0BB7-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE7-\\u0BEF\\u0C01-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C82\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0D02\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3E-\\u0D43\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D60\\u0D61\\u0D66-\\u0D6F\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC\\u0EDD\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F69\\u0F71-\\u0F84\\u0F86-\\u0F8B\\u0F90-\\u0F95\\u0F97\\u0F99-\\u0FAD\\u0FB1-\\u0FB7\\u0FB9\\u10A0-\\u10C5\\u10D0-\\u10F6\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1E00-\\u1E9B\\u1EA0-\\u1EF9\\u1F00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u207F\\u20D0-\\u20DC\\u20E1\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2131\\u2133-\\u2138\\u2160-\\u2182\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3041-\\u3094\\u3099\\u309A\\u309D\\u309E\\u30A1-\\u30FE\\u3105-\\u312C\\u3131-\\u318E\\u4E00-\\u9FA5\\uAC00-\\uD7A3\\uF900-\\uFA2D\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1E-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE20-\\uFE23\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF65-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]*$/;\n\nexport var Cf = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC38]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/g;\n",
			"import RegExp from '.RegExp';\nimport Infinity from '.Infinity';\nimport Object from '.Object';\nimport throwError from '.throw.Error';\n\nimport { Cf } from 'lib:unicode';\n\nexport var _Infinity = -Infinity;\n\nexport function NullLiteral ()         {\n\treturn 'null';\n}\n\nexport function BooleanLiteral (value         )                   {\n\treturn value ? 'true' : 'false';\n}\n\nexport var is                                                = Object.is || function is (value        ) { return value===0 && 1/value<0; };\nexport function NumericLiteral (value        )         {\n\treturn value===Infinity || value===_Infinity || value!==value\n\t\t? /*#__PURE__*/ throwError('NumericLiteral('+value+')')\n\t\t: ( is(value, -0) ? '-' : '' )+value;\n}\n\nvar CANT_IN_SINGLE_QUOTE = /[\\n\\r'\\\\\\u2028\\u2029]/g;\nfunction staticallyEscape (cant_in_single_quote                              )         {\n\treturn CHAR_TO_ESCAPED[cant_in_single_quote];\n}\n\nvar CHAR_TO_ESCAPED = { '\\n': '\\\\n', '\\r': '\\\\r', '\\'': '\\\\\\'', '\\\\': '\\\\\\\\', '\\u2028': '\\\\u2028', '\\u2029': '\\\\u2029' };\nfunction dynamicallyEscape (char_in_cf        )         {\n\tif ( char_in_cf.length>1 ) {\n\t\treturn dynamicallyEscape(char_in_cf.charAt(0))+dynamicallyEscape(char_in_cf.charAt(1));\n\t}\n\tvar hex         = char_in_cf.charCodeAt(0).toString(16).toUpperCase();\n\tswitch ( hex.length ) {\n\t\tcase 4:\n\t\t\treturn '\\\\u'+hex;\n\t\tcase 3:\n\t\t\treturn '\\\\u0'+hex;\n\t\tcase 2:\n\t\t\treturn '\\\\x'+hex;\n\t}\n\treturn '\\\\x0'+hex;\n}\n\n                                           \n\nexport function StringLiteral (value        )         {\n\treturn '\\''\n\t\t+value\n\t\t.replace(CANT_IN_SINGLE_QUOTE, staticallyEscape            )\n\t\t.replace(Cf, dynamicallyEscape            )\n\t\t+'\\'';\n}\n\nvar EOL = /\\\\[^\\s\\S]|[\\n\\r\\/\\u2028\\u2029]/g;\nfunction EOL_replacer (part        ) {\n\tswitch ( part ) {\n\t\tcase '\\n':\n\t\tcase '\\\\\\n':\n\t\t\treturn '\\\\n';\n\t\tcase '\\r':\n\t\tcase '\\\\\\r':\n\t\t\treturn '\\\\r';\n\t\tcase '/':\n\t\t\treturn '\\\\/';\n\t\tcase '\\u2028':\n\t\tcase '\\\\\\u2028':\n\t\t\treturn '\\\\u2028';\n\t\tcase '\\u2029':\n\t\tcase '\\\\\\u2029':\n\t\t\treturn '\\\\u2029';\n\t}\n\treturn part;\n}\nvar AS_ES5 = ''+/*#__PURE__*/RegExp('')==='//' || ''+/*#__PURE__*/RegExp('/')==='///' || ''+/*#__PURE__*/RegExp('\\n')==='/\\n/'\n\t? function AS_ES5 (literal        ) {\n\t\tvar index         = literal.length;\n\t\twhile ( literal.charAt(--index)!=='/' ) { }\n\t\tvar source         = literal.slice(1, index);\n\t\tsource = source ? source.replace(EOL, EOL_replacer) : '(?:)';\n\t\treturn '/'+source+literal.slice(index);\n\t}\n\t: function (literal        ) { return literal; };\nvar MAYBE_ES3 = /\\/[gim]*$/;\nvar SLASH_NUL = /(?!^)\\/(?![a-z]*$)|\\x00|\\\\[\\s\\S]/g;\nfunction SLASH_NUL_replacer (part        ) { return part==='\\x00' ? '\\\\x00' : part==='/' ? '\\\\/' : part; }\nexport function RegularExpressionLiteral (value        )         {\n\tvar literal         = AS_ES5(''+value);\n\treturn MAYBE_ES3.test(literal)\n\t\t? literal.replace(Cf, dynamicallyEscape            ).replace(SLASH_NUL, SLASH_NUL_replacer)\n\t\t: literal;\n}\n\nexport function BigIntLiteral (value        )         {\n\treturn value+'n';\n}\n",
			"import test from '.RegExp.prototype.test';\nimport bind from '.Function.prototype.bind?';\n\nexport var test_bind = bind\n\t? /*#__PURE__*/ bind.bind(test)                                                                       \n\t: function (            re        ) {\n\t\treturn function (            string        ) {\n\t\t\treturn test.call(re, string);\n\t\t};\n\t};\n\nvar IS_LIKE_SAFE_INTEGER = /*#__PURE__*/ test_bind(/^(?:0|[1-9]\\d{0,15})$/);\nvar IS_LIKE_ARRAY_INDEX = /*#__PURE__*/ test_bind(/^(?:0|[1-4]\\d{0,9}|[5-9]\\d{0,8})$/);\nexport function isArrayIndex (key        )          {\n\treturn IS_LIKE_ARRAY_INDEX(key) && key       <4294967295;\n}\nexport function isIntegerIndex (key        )          {\n\treturn IS_LIKE_SAFE_INTEGER(key) && key       <=9007199254740991;\n}\n\nimport { RESERVED_WORD_ES3, RESERVED_WORD_ESM } from 'lib:reserved-word';\nvar IS_RESERVED_WORD_ES3 = /*#__PURE__*/ test_bind(RESERVED_WORD_ES3);\nvar IS_RESERVED_WORD_ESM = /*#__PURE__*/ test_bind(RESERVED_WORD_ESM);\nexport function isReservedWord (name        , noStrict          )          {\n\treturn noStrict\n\t\t? IS_RESERVED_WORD_ES3(name)\n\t\t: IS_RESERVED_WORD_ESM(name);\n}\n\nimport { IDENTIFIER_NAME_ES6, IDENTIFIER_NAME_ES3, IDENTIFIER_NAME_ES5 } from 'lib:unicode';\nvar IS_IDENTIFIER_NAME_ES6 = /*#__PURE__*/ test_bind(IDENTIFIER_NAME_ES6);\nvar IS_IDENTIFIER_NAME_ES3 = /*#__PURE__*/ test_bind(IDENTIFIER_NAME_ES3);\nvar IS_IDENTIFIER_NAME_ES5 = /*#__PURE__*/ test_bind(IDENTIFIER_NAME_ES5);\nexport function isIdentifierName (name        , ES         )          {\n\tif ( ES ) {\n\t\tif ( ES>=6 ) { return IS_IDENTIFIER_NAME_ES6(name); }\n\t\tif ( ES>=5 ) { return IS_IDENTIFIER_NAME_ES5(name); }\n\t}\n\treturn IS_IDENTIFIER_NAME_ES3(name);\n}\nexport function isIdentifier (id        , ES         , noStrict          )          {\n\treturn isIdentifierName(id, ES) && !isReservedWord(id, noStrict);\n}\nexport function isPropertyName (key        , ES         )          {\n\treturn isIdentifierName(key, ES)\n\t\t? ES >=5 || !IS_RESERVED_WORD_ES3(key)\n\t\t: isIntegerIndex(key);\n}\n\nimport { StringLiteral } from './Literal';\nexport function PropertyName (key        , ES         )         {\n\treturn isPropertyName(key, ES) ? key : StringLiteral(key);// ['__proto__']\n}\nexport function PropertyAccessor (key        , ES         )         {\n\tif ( isIdentifierName(key, ES) ) { if ( ES >=5 || !IS_RESERVED_WORD_ES3(key) ) { return '.' + key; } }\n\telse { if ( isIntegerIndex(key) ) { return '[' + key + ']'; } }\n\treturn '[' + StringLiteral(key) + ']';\n}\nexport function PropertyAccessors (keys                   , ES         )         {\n\tvar propertyAccessors         = '';\n\tfor ( var length = keys.length, index = 0; index<length; ++index ) {\n\t\tpropertyAccessors += PropertyAccessor(keys[index] , ES);\n\t}\n\treturn propertyAccessors;\n}\n",
			"import Error from '.Error';\nimport TypeError from '.TypeError';\nimport test from '.RegExp.prototype.test';\nimport exec from '.RegExp.prototype.exec';\nimport undefined from '.undefined';\n\nimport { StringLiteral, isIdentifierName, isIdentifier } from '@ltd/j-es';\n\nimport * as deps from '../../deps';\nimport * as ing from '../ing';\nimport * as util from '../util';\nimport { ensureD$, ensureGT$, throwUnicode } from './toJSX';\n\nlet credit         = 0;\nlet jsxFactory                    ;\nlet jsxFragmentFactory                    ;\n\nconst AMP_OR_BACKSLASH = /[&\\\\]/;\nconst text2string = (value        , ts_index        )         => {\n\tconst indexOfAMP = value.search(AMP_OR_BACKSLASH);\n\treturn indexOfAMP<0 ? StringLiteral(value) : util.throwPosError(ts_index + indexOfAMP, ``);\n};\nconst needCD = (expression                 ) => expression.kind===deps.BinaryExpression && ( expression                          ).operatorToken.kind===deps.CommaToken;\nconst notMin = /*#__PURE__*/test.bind(/[\\s/]/);\nconst couldNotNotString = /*#__PURE__*/test.bind(/[-:]/);\nconst NO_ATTRIBUTE = /*#__PURE__*/test.bind(/^{\\s*}\\s*$/);\n\nconst coverCode = (dist        , src        )         => {\n\tconst index = src.search(util.INDEX_OF_EOL);\n\tif ( index<0 ) {\n\t\tconst surplus = src.length - dist.length;\n\t\tif ( surplus>credit ) {\n\t\t\tdist += util.eraseCode(src.slice(dist.length + credit));\n\t\t\tcredit = 0;\n\t\t}\n\t\telse { credit -= surplus; }\n\t}\n\telse {\n\t\tdist += util.eraseCode(src.slice(util.min(index, dist.length)));\n\t\tcredit = 0;\n\t}\n\treturn dist;\n};\nconst coverBetween = (dist        , srcStart        , srcEnd        )         => coverCode(dist, ing.ts.slice(srcStart, srcEnd));\nconst coverRange = (dist        , srcRange                        )         => coverCode(dist, ing.ts.slice(srcRange.pos, srcRange.end));\nconst resetIfNewline = (code        ) => {\n\tif ( credit && util.INCLUDES_EOL(code) ) { credit = 0; }\n};\n\nconst jsx$_$ = /*#__PURE__*/exec.bind(/^jsx(?:Frag)?\\s+(\\S*)(\\s?)/)                                                                     ;\nconst Along = (value        )         => {\n\tconst parts = value.split('.');\n\tisIdentifier(parts[0] ) || util.throwPosError(0, `@jsx(Frag) value is not valid`);\n\tif ( !isIdentifier(parts[0] ) ) { return ''; }\n\tlet index = parts.length;\n\twhile ( --index ) { isIdentifierName(parts[index] ) || util.throwPosError(0, `@jsx(Frag) value is not valid`); }\n\treturn value;\n};\nconst readJSX = () => {\n\tfor ( const { 0: name_value_, 1: value, 2: valid } of util.readAT                            (jsx$_$) ) {\n\t\tvalid || util.throwPosError(0, `there should be at least one whitespace after JSDoc value`);\n\t\tif ( name_value_[3]==='F' ) {\n\t\t\tjsxFragmentFactory===undefined || util.throwPosError(0, `there should not be more than one @jsxFrag`);\n\t\t\tjsxFragmentFactory = Along(value);\n\t\t\tif ( jsxFactory!==undefined ) { break; }\n\t\t}\n\t\telse {\n\t\t\tjsxFactory===undefined || util.throwPosError(0, `there should not be more than one @jsx`);\n\t\t\tjsxFactory = Along(value);\n\t\t\tif ( jsxFragmentFactory!==undefined ) { break; }\n\t\t}\n\t}\n};\n\nconst noReasonNotString = /*#__PURE__*/test.bind(/^[a-z][^.]*$/);\nconst GENERATE_START                = (value, { index, type }) =>\n\tvalue\n\t\t? value==='this'\n\t\t\t? util.throwPosError(index - 1, `tag name should better not be \"this\", because it should be an intrinsic element according to the current react jsx spec/docs, but is a value-based element in typescript and babel in fact for historical reason, so please use it more exactly via a variable`)\n\t\t\t: noReasonNotString(value) || couldNotNotString(value)\n\t\t\t\t? type ? util.throwPosError(index - 1, `intrinsic element cannot has type arguments`) : `${jsxFactory}('${value}',`\n\t\t\t\t: `${jsxFactory}(${value},`\n\t\t: `${jsxFactory}(${jsxFragmentFactory },null,`;\nlet generateStart                = GENERATE_START;\n\nexport const off = ()       => {\n\tjsxFactory = jsxFragmentFactory = undefined;\n\tgenerateStart = GENERATE_START;\n};\n                                                            \n\t             \n\t                        \n\t            \n\t             \n\t                        \n\t                        \n                                            \nexport const on = (jsx               )       => {\n\treadJSX();\n\tgenerateStart = jsx;\n};\n                               \n\t                             \n\t                                     \n\t                                 \n              \nexport const on$ = (compilerOptions                 )       => {\n\treadJSX();\n\tlet reactNamespace                    ;\n\tif ( !jsxFactory ) {\n\t\tjsxFactory = compilerOptions?.jsxFactory;\n\t\tif ( jsxFactory===undefined ) {\n\t\t\treactNamespace = compilerOptions?.reactNamespace;\n\t\t\tif ( reactNamespace===undefined ) { reactNamespace = 'React'; }\n\t\t\telse if ( typeof reactNamespace!=='string' ) { throw TypeError(`transpileModule(,{compilerOptions:{jsx:'react',reactNamespace:!string}})`); }\n\t\t\tjsxFactory = reactNamespace + '.createElement';\n\t\t}\n\t\telse if ( typeof jsxFactory!=='string' ) { throw TypeError(`transpileModule(,{compilerOptions:{jsx:'react',jsxFactory:!string}})`); }\n\t}\n\tif ( !jsxFragmentFactory ) {\n\t\tjsxFragmentFactory = compilerOptions?.jsxFragmentFactory;\n\t\tif ( jsxFragmentFactory===undefined ) {\n\t\t\tif ( reactNamespace===undefined ) {\n\t\t\t\treactNamespace = compilerOptions?.reactNamespace;\n\t\t\t\tif ( reactNamespace===undefined ) { reactNamespace = 'React'; }\n\t\t\t\telse if ( typeof reactNamespace!=='string' ) { throw TypeError(`transpileModule(,{compilerOptions:{jsx:'react',reactNamespace:!string}})`); }\n\t\t\t}\n\t\t\tjsxFragmentFactory = reactNamespace + '.Fragment';\n\t\t}\n\t\telse if ( typeof jsxFragmentFactory!=='string' ) { throw TypeError(`transpileModule(,{compilerOptions:{jsx:'react',jsxFragmentFactory:!string}})`); }\n\t}\n\tgenerateStart = GENERATE_START;\n};\n\nexport function Generator (            node           )                                       {\n\tswitch ( node.kind ) {\n\t\tcase deps.JsxSelfClosingElement: return SelfClosingElementGenerator(node                              , true);\n\t\tcase deps.JsxElement: return ElementGenerator(node                   , true);\n\t\tcase deps.JsxFragment: return FragmentGenerator(node                    , true);\n\t}\n\treturn null;\n}\n\nfunction * FragmentGenerator (            node                  , reset         )                                {\n\t// openingFragment: JsxOpeningFragment [ \" < >\" ]\n\t// children: ... JsxText | JsxExpression | Jsx3\n\t// closingFragment: JsxClosingFragment [ \"</ >\" ]\n\tif ( reset ) { credit = 0; }\n\t/* opening */\n\tensureGT$(node.openingFragment);\n\tconst _real = util.codeOf(node.openingFragment);\n\tconst real = util.trimBefore(_real);\n\tyield coverCode(``, _real.slice(0, -real.length));\n\tconst index = node.openingFragment.end - real.length;\n\tconst start = generateStart('', {\n\t\tindex,\n\t\tpath: ing.filename,\n\t\tcode: ing.ts,\n\t\ttype: false,\n\t\tmain: jsxFactory,\n\t\tfrag: jsxFragmentFactory,\n\t});\n\tif ( typeof start!=='string' ) { throw TypeError(`transpileModule(,jsx) must return a string`); }\n\tlet needComma = true;\n\tswitch ( start[start.length - 1] ) {\n\t\tcase ',': break;\n\t\tcase '(': needComma = false; break;\n\t\tdefault: throw TypeError(`transpileModule(,jsx) must return string endsWith \",\" or \"(\"`);\n\t}\n\tif ( util.INCLUDES_EOL(start) ) { throw Error(`transpileModule(,jsx) must return single line string`); }\n\tyield coverCode(needComma ? start.slice(0, -1) : start, real);\n\t/* children */\n\tif ( node.children.length ) { yield * Children(needComma ? ',' : '', node); }\n\t/* closing */\n\tensureGT$(node.closingFragment);\n\tyield coverRange(`)`, node.closingFragment);\n\tif ( reset ) { credit = 0; }\n}\nfunction * SelfClosingElementGenerator (            node                            , reset         )                                {\n\t// \" <\"\n\t// ThisKeyword [ \" this\" ] | Identifier [ \" $\" ] | PropertyAccessExpression [ ThisKeyword|Identifier|PropertyAccessExpression \" .\" Identifier ]\n\t//  \" <\"?\n\t//  $?\n\t//  \" >\"?\n\t// JsxAttributes\n\t// \" / >\"\n\tif ( reset ) { credit = 0; }\n\t/* opening */\n\tyield * Opening(node, `)`);\n\t/* closing */\n\tensureGT$(node);\n\tif ( reset ) { credit = 0; }\n}\nfunction * ElementGenerator (            node                 , reset         )                                {\n\t// JsxOpeningElement\n\t// ... JsxText | JsxExpression\n\t// JsxClosingElement [ \"</\" ThisKeyword|Identifier|PropertyAccessExpression \" >\" ]\n\tif ( reset ) { credit = 0; }\n\t/* opening */\n\tconst tag_min = yield * Opening(node.openingElement, ``);\n\t/* children */\n\tif ( node.children.length ) { yield * Children(',', node); }\n\t/* closing */\n\tensureGT$(node.closingElement);\n\ting.ts.startsWith(`</${tag_min}>`, node.closingElement.pos) || util.throwPosError(node.closingElement.pos, `the closing tag should better have verbatim same name with opening tag, and without any whitespace or comment in`);\n\tyield coverRange(`)`, node.closingElement);\n\tif ( reset ) { credit = 0; }\n}\n\nfunction * Opening (            node                                                     , after          )                                  {\n\t// \" <\"\n\t// ThisKeyword | Identifier | PropertyAccessExpression\n\t// \" <\"?\n\t// $?\n\t// \" >\"?\n\t// JsxAttributes\n\t// \" / >\" | \" >\"\n\tconst { tagName, attributes } = node;\n\tyield coverBetween('', node.pos, tagName.pos - 1);\n\tconst tag_min = util.codeOf(tagName);\n\tnotMin(tag_min) && util.throwPosError(tagName.pos - 1, `whitespaces and comments should better not appear in tag name`);\n\tconst indexOfBackslash = tag_min.indexOf('\\\\');\n\tindexOfBackslash<0 || util.throwPosError(tagName.pos + indexOfBackslash, `tag name should better not contain UnicodeEscapeSequence`);\n\tnode.typeArguments && tagName.end + 1!==node.typeArguments.pos && util.throwPosError(tagName.pos - 1, `whitespaces and comments should better not appear between tag name and type argument`);\n\tconst start = generateStart(tag_min, {\n\t\tindex: tagName.pos,\n\t\tpath: ing.filename,\n\t\tcode: ing.ts,\n\t\ttype: ing.ts[tagName.end]==='<',\n\t\tmain: jsxFactory,\n\t\tfrag: jsxFragmentFactory,\n\t});\n\tif ( typeof start!=='string' ) { throw TypeError(`transpileModule(,jsx) must return a string`); }\n\tswitch ( start[start.length - 1] ) {\n\t\tcase ',': break;\n\t\tcase '(': break;\n\t\tdefault: throw TypeError(`transpileModule(,jsx) must return string endsWith \",\" or \"(\"`);\n\t}\n\tif ( util.INCLUDES_EOL(start) ) { throw Error(`transpileModule(,jsx) must return single line string`); }\n\tyield coverBetween(start, tagName.pos - 1, attributes.pos);\n\tif ( attributes.properties.length ) {\n\t\tconst old = credit;\n\t\tconst js = [ ...Attributes(attributes) ].join('');\n\t\tif ( NO_ATTRIBUTE(js) ) {\n\t\t\tcredit = old;\n\t\t\tyield coverRange('null', attributes);\n\t\t}\n\t\telse { yield js; }\n\t}\n\telse {\n\t\tattributes.pos===attributes.end || throwUnicode(attributes.pos/*, attributes.end*/, `tag`);\n\t\tyield coverRange('null', attributes);\n\t}\n\tensureGT$(node);\n\tyield coverBetween(after, attributes.end, node.end);\n\treturn tag_min;\n}\n\nfunction * Children (            before          , { children }                                    )                                {\n\tconst lastIndex = children.length - 1;\n\tlet index = 0;\n\tlet isLast = !lastIndex;\n\tfor ( let TEXT = ''; ; before = ',' ) {\n\t\tconst child = children[index] ;\n\t\tswitch ( child.kind ) {\n\t\t\tcase deps.JsxText:\n\t\t\t\t// === JsxText:\n\t\t\t\t// \" &lt; \"\n\t\t\t\tconst text = util.codeOf(child);\n\t\t\t\tconst rest = text.replace(text.includes('\\t') ? util.TAB_INDENT : util.SPACE_INDENT, '');\n\t\t\t\tif ( rest ) {\n\t\t\t\t\tthrow util.throwPosError(child.end - rest.length, `there should better not be JsxText except indents`);\n\t\t\t\t}\n\t\t\t\tTEXT += text;\n\t\t\t\tbreak;\n\t\t\tcase deps.JsxExpression:\n\t\t\t\t// === JsxExpression:\n\t\t\t\t// \"{\" $ \" }\" | \"{ }\"\n\t\t\t\tconst { expression } = child;\n\t\t\t\tif ( expression ) {\n\t\t\t\t\tchild.dotDotDotToken && util.throwPosError(child.dotDotDotToken.end - 3, `child expression can not start with \"...\"`);\n\t\t\t\t\tensureD$(child, `child`);\n\t\t\t\t\tconst CD = needCD(expression);\n\t\t\t\t\tyield coverCode(`${before}${CD ? '(' : ''}`, `${TEXT} `);\n\t\t\t\t\tyield * util.erase(expression);\n\t\t\t\t\tresetIfNewline(util.codeOf(expression));\n\t\t\t\t\tyield coverBetween(CD ? ')' : '', expression.end, child.end);\n\t\t\t\t}\n\t\t\t\telse { yield coverCode('', TEXT + util.codeOf(child)); }\n\t\t\t\tTEXT = '';\n\t\t\t\tbreak;\n\t\t\tcase deps.JsxElement:\n\t\t\t\tif ( TEXT ) {\n\t\t\t\t\tyield coverCode('', TEXT);\n\t\t\t\t\tTEXT = '';\n\t\t\t\t}\n\t\t\t\tyield * ElementGenerator(child                   , false);\n\t\t\t\tbreak;\n\t\t\tcase deps.JsxSelfClosingElement:\n\t\t\t\tif ( TEXT ) {\n\t\t\t\t\tyield coverCode('', TEXT);\n\t\t\t\t\tTEXT = '';\n\t\t\t\t}\n\t\t\t\tyield * SelfClosingElementGenerator(child                              , false);\n\t\t\t\tbreak;\n\t\t\tcase deps.JsxFragment:\n\t\t\t\tif ( TEXT ) {\n\t\t\t\t\tyield coverCode('', TEXT);\n\t\t\t\t\tTEXT = '';\n\t\t\t\t}\n\t\t\t\tyield * FragmentGenerator(child                    , false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow util.throwPosError(( child              ).pos, `@ltd/j-ts does not know about child kind ${deps.SyntaxKind[( child              ).kind]}`);\n\t\t}\n\t\tif ( isLast ) {\n\t\t\tif ( TEXT ) { yield coverCode('', TEXT); }\n\t\t\tbreak;\n\t\t}\n\t\tisLast = ++index===lastIndex;\n\t}\n}\n\nfunction * Attributes (            { properties }                    )                                {\n\tlet ts_index = properties.pos;\n\tconst lastIndex = properties.length - 1;\n\tlet index = 0;\n\tlet isLast = !lastIndex;\n\tfor ( let beforeEach            = '{'; ; beforeEach = ',' ) {\n\t\tconst afterEach = isLast ? '}' : '';\n\t\tconst attr = properties[index] ;\n\t\tattr.pos===ts_index || throwUnicode(ts_index/*, attr.pos*/, `tag`);\n\t\tts_index = attr.end;\n\t\tif ( attr.kind===deps.JsxSpreadAttribute ) {\n\t\t\t// === JsxSpreadAttribute:\n\t\t\t// \" { ...\"\n\t\t\t// $\n\t\t\t// \" }\"\n\t\t\tconst { expression } = attr;\n\t\t\ting.ts.endsWith('...', expression.pos - 3) || util.throwPosError(expression.pos, `JsxSpreadAttribute must start with \"...\"`);\n\t\t\tensureD$(attr, `JsxSpreadAttribute`);\n\t\t\texpression.pos===expression.end && util.throwPosError(expression.pos, `JsxSpreadAttribute can not be empty`);\n\t\t\tif ( expression.kind===deps.ObjectLiteralExpression ) {\n\t\t\t\t// === \" { _ , _ , }\"\n\t\t\t\t// \" {\"\n\t\t\t\t// ... `${ _} ,${ _} ,`\n\t\t\t\t// \" }\"\n\t\t\t\tconst { properties } = expression                                ;\n\t\t\t\tconst { length } = properties;\n\t\t\t\tif ( length ) {\n\t\t\t\t\tfor ( const property of properties ) {\n\t\t\t\t\t\tswitch ( property.kind ) {\n\t\t\t\t\t\t\tcase deps.ShorthandPropertyAssignment:\n\t\t\t\t\t\t\tcase deps.SpreadAssignment:\n\t\t\t\t\t\t\tcase deps.MethodDeclaration:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase deps.PropertyAssignment:\n\t\t\t\t\t\t\t\tswitch ( property.name.kind ) {\n\t\t\t\t\t\t\t\t\tcase deps.ComputedPropertyName:\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase deps.StringLiteral:\n\t\t\t\t\t\t\t\t\t\tproperty.name.text==='__proto__' && util.throwPosError(util.RealPos(property.name), `@ltd/j-ts does not know what to do for \"'__proto__':\" while trying to optimize ObjectLiteralExpression JsxSpreadAttribute`);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase deps.Identifier:\n\t\t\t\t\t\t\t\t\t\tproperty.name.escapedText==='___proto__' && util.throwPosError(util.RealPos(property.name), `\"@ltd/j-ts does not know what to do for \"__proto__:\" while trying to optimize ObjectLiteralExpression JsxSpreadAttribute`);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tthrow util.throwPosError(util.RealPos(property.name), `@ltd/j-ts does not know ${deps.SyntaxKind[property.name.kind]} PropertyAssignment while trying to optimize ObjectLiteralExpression JsxSpreadAttribute`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase deps.GetAccessor:\n\t\t\t\t\t\t\tcase deps.SetAccessor:\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow util.throwPosError(util.RealPos(property), `@ltd/j-ts does not know ${deps.SyntaxKind[( property              ).kind]} while trying to optimize ObjectLiteralExpression JsxSpreadAttribute`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet property = properties[0] ;\n\t\t\t\t\tconst firstPropertyPOS = property.pos;\n\t\t\t\t\tyield coverBetween(beforeEach, attr.pos, firstPropertyPOS);\n\t\t\t\t\tfor ( let index = 0; ; ) {\n\t\t\t\t\t\tyield * util.erase(property);\n\t\t\t\t\t\tif ( ++index===length ) { break; }\n\t\t\t\t\t\tyield util.slice(property.end, ( property = properties[index]  ).pos);\n\t\t\t\t\t}\n\t\t\t\t\tresetIfNewline(util.slice(firstPropertyPOS, property.end));\n\t\t\t\t\tyield coverBetween(afterEach, property.end, ts_index);\n\t\t\t\t}\n\t\t\t\telse { yield coverBetween(`${beforeEach}${afterEach}`.replace(',', ''), attr.pos, ts_index); }\n\t\t\t}\n\t\t\telse {\n\t\t\t\tneedCD(expression) && util.throwPosError(( expression                          ).operatorToken.end - 1, `invalid \",\" in JsxSpreadAttribute expression`);\n\t\t\t\tyield coverBetween(beforeEach, attr.pos, expression.pos - 3) + '...';\n\t\t\t\tyield * util.erase(expression);\n\t\t\t\tresetIfNewline(util.codeOf(expression));\n\t\t\t\tyield coverBetween(afterEach, expression.end, ts_index);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// === JsxAttribute:\n\t\t\t// Identifier [ \" $\" ]\n\t\t\tconst { name, initializer } = attr;\n\t\t\tname || util.throwPosError(attr.pos, `attribute name can not be empty`);\n\t\t\tconst _name = util.codeOf(name);\n\t\t\tconst real = util.trimBefore(_name);\n\t\t\tconst _ = _name.slice(0, -real.length) || util.throwPosError(name.pos, `there should better be at least one whitespace before attribute name`);\n\t\t\t_[0]==='/' && util.throwPosError(name.pos, `comments in tag should better be surrounded by at least one whitespace on each side`);\n\t\t\t_[_.length - 1]==='/' && util.throwPosError(name.pos + _.length, `comments in tag should better be surrounded by at least one whitespace on each side`);\n\t\t\tconst indexOfBackslash = real.indexOf('\\\\');\n\t\t\tindexOfBackslash<0 || util.throwPosError(name.pos + _.length + indexOfBackslash, `attribute name should better not contain UnicodeEscapeSequence`);/// or at least throw invalid (syntax, range, __proto__, '')\n\t\t\treal==='__proto__' && util.throwPosError(name.pos + _.length, `attribute name should better not be \"__proto__\", because it should be a normal property, but is a magic name in fact and not be handled by other transpiler like typescript and babel`);\n\t\t\tconst $name$ = couldNotNotString(real) ? `'${real}'`: real;\n\t\t\tif ( initializer ) {\n\t\t\t\tconst indexOfBackslash = util.slice(name.end, initializer.pos).indexOf('/');\n\t\t\t\tindexOfBackslash<0 || util.throwPosError(name.end + indexOfBackslash, `there should better not be comments on any side of =`);\n\t\t\t\tif ( initializer.kind===deps.JsxExpression ) {\n\t\t\t\t\t// \" =\"\n\t\t\t\t\t// JsxExpression [ \" {\" $ \" }\" ]\n\t\t\t\t\tinitializer.dotDotDotToken && util.throwPosError(initializer.dotDotDotToken.end - 3, `attribute value expression can not start with \"...\"`);\n\t\t\t\t\tconst expression = initializer.expression || util.throwPosError(initializer.end - 1, `attribute value expression can not be empty`);\n\t\t\t\t\tconst indexOfBackslash = util.slice(initializer.pos, expression.pos - 1).indexOf('/');\n\t\t\t\t\tindexOfBackslash<0 || util.throwPosError(initializer.pos + indexOfBackslash, `there should better not be comments on any side of =`);\n\t\t\t\t\tensureD$(initializer, `attribute value`);\n\t\t\t\t\tconst CD = needCD(expression);\n\t\t\t\t\tyield coverBetween(`${beforeEach}${$name$}:${CD ? '(' : ''}`, attr.pos, expression.pos);\n\t\t\t\t\tyield * util.erase(expression);\n\t\t\t\t\tresetIfNewline(util.codeOf(expression));\n\t\t\t\t\tyield coverBetween(`${CD ? ')' : ''}${afterEach}`, expression.end, ts_index);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// \" =\"\n\t\t\t\t\t// StringLiteral [ \" \\\"&lt;\\\"\" ]\n\t\t\t\t\tconst _$value$ = util.codeOf(initializer);\n\t\t\t\t\tconst $value$ = util.trimBefore(_$value$);\n\t\t\t\t\tconst indexOfBackslash = _$value$.slice(0, -$value$.length).indexOf('/');\n\t\t\t\t\tindexOfBackslash<0 || util.throwPosError(initializer.pos + indexOfBackslash, `there should better not be comments on any side of =`);\n\t\t\t\t\tconst indexOfQuote = initializer.pos + ( _$value$.length - $value$.length );\n\t\t\t\t\t$value$.length>1 && $value$[$value$.length - 1]===$value$[0] || util.throwPosError(indexOfQuote, `attribute value string literal is not closed`);\n\t\t\t\t\tyield coverRange(`${beforeEach}${$name$}:${text2string($value$.slice(1, -1), indexOfQuote + 1)}${afterEach}`, attr);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tname.end===ts_index || util.throwPosError(ts_index - 1, `there must be a quoted string or an expression after attribute =`);\n\t\t\t\tyield coverCode(`${beforeEach}${$name$}:!0${afterEach}`, _name);\n\t\t\t}\n\t\t}\n\t\tif ( isLast ) {\n\t\t\tproperties.end===ts_index || throwUnicode(ts_index/*, properties.end*/, `tag`);\n\t\t\tbreak;\n\t\t}\n\t\tisLast = ++index===lastIndex;\n\t}\n}\n",
			"import * as JSX from './toJSX';\nimport * as JS from './toJS';\n\nexport let ing          = false;\nexport let handle = JSX.Generator;\n\nexport const onJSX = ()       => {\n\thandle = JSX.Generator;\n\ting = true;\n};\n\nexport const onJS$ = (compilerOptions                    )       => {\n\tJS.on$(compilerOptions);\n\thandle = JS.Generator;\n\ting = true;\n};\nexport const onJS = (jsx                  )       => {\n\tJS.on(jsx);\n\thandle = JS.Generator;\n\ting = true;\n};\n\nexport const off = ()       => {\n\tJS.off();\n\ting = false;\n};\n",
			"import * as deps from '../../deps';\nimport * as util from '../util';\n\nexport default function * (            node                                                                   )                                {\n\tconst expression = node.expression ;\n\tif ( expression.kind===deps.TypeAssertionExpression ) {\n\t\tconst { type, expression: value } = expression                      ;\n\t\tif ( util.INCLUDES_EOL(util.slice(type.pos, util.RealPos(value))) ) {\n\t\t\tconst before_ =\n\t\t\t\tutil.slice(node.pos, type.pos - 1)// <\n\t\t\t;\n\t\t\tif ( node.kind===deps.YieldExpression ) {\n\t\t\t\tconst _after =\n\t\t\t\t\tutil.eraseRange(type)//T\n\t\t\t\t\t+\n\t\t\t\t\tutil.slice(type.end, value.pos - 1) + ' '// >\n\t\t\t\t\t+\n\t\t\t\t\t[ ...util.erase(value) ].join('')// v\n\t\t\t\t;\n\t\t\t\tconst LEFT = before_.length + 1 - before_.trimEnd().length;\n\t\t\t\tif ( LEFT>=8 ) { yield before_.slice(0, -7) + '{$:0}.$=' + _after; }\n\t\t\t\telse {\n\t\t\t\t\tyield LEFT===1 ? before_ : before_.slice(0, 1 - LEFT);\n\t\t\t\t\tconst parts = _after.match(util.WHITESPACES_AND_COMMENT);\n\t\t\t\t\tif ( parts ) {\n\t\t\t\t\t\tlet left = 8;\n\t\t\t\t\t\tlet index = parts.length;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif ( util.CHAR_NOT_EOL(parts[--index] ) ) {\n\t\t\t\t\t\t\t\tparts[index] = '{$:0}.$='[--left] ;\n\t\t\t\t\t\t\t\tif ( left===LEFT ) { break; }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile ( index );\n\t\t\t\t\t\tif ( left===8 ) { yield '{$:0}.$=' + _after; }\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst right = parts.join('');\n\t\t\t\t\t\t\tyield '{$:0}.$='.slice(0, left) + right + _after.slice(right.length);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse { yield '{$:0}.$=' + _after; }\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tyield before_;\n\t\t\t\tif ( before_.endsWith(node.kind===deps.ThrowStatement ? 'throw' : 'return') ) {\n\t\t\t\t\tconst _type = util.codeOf(type);\n\t\t\t\t\tconst real = util.trimBefore(_type);\n\t\t\t\t\tyield '+' + util.eraseCode(_type.slice(0, -real.length)) + '0' + util.eraseCode(real.slice(1));\n\t\t\t\t}\n\t\t\t\telse { yield '0' + util.eraseRange(type); }\n\t\t\t\tyield util.slice(type.end, value.pos - 1) + ',';\n\t\t\t\tyield * util.erase(value);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tyield util.slice(node.pos, type.pos - 1) + util.eraseBetween(type.pos - 1, type.end) + util.slice(type.end, value.pos - 1) + ' ';\n\t\t\tyield * util.erase(value);\n\t\t}\n\t}\n\telse {\n\t\tif ( node.pos!==expression.pos ) { yield util.slice(node.pos, expression.pos); }\n\t\tyield * util.erase(expression);\n\t}\n\tif ( expression.end!==node.end ) { yield util.slice(expression.end, node.end); }\n}\n",
			"import * as deps from '../../deps';\nimport * as util from '../util';\n\nexport default function * (            node           )                                {\n\tconst children = util.Children(node);\n\tlet index = 0;\n\tif ( node.kind===deps.NewExpression ) { yield children[index++]          ; }\n\tyield * util.erase(children[index++]             );\n\tconst { length } = children;\n\tif ( index===length ) { return; }\n\tlet child = children[index] ;\n\tif ( typeof child==='object' ) {\n\t\tyield * util.erase(child);\n\t\tif ( ++index===length ) { return; }\n\t\tchild = children[index]          ;\n\t}\n\tif ( child[child.length - 1]==='<' ) {\n\t\tyield child.slice(0, -1) + ' ';\n\t\twhile ( ++index!==length ) {\n\t\t\tconst child = children[index] ;\n\t\t\tif ( typeof child==='string' ) {\n\t\t\t\tconst real = util.trimBefore(child);\n\t\t\t\tif ( real && real[0]==='>' ) {\n\t\t\t\t\tyield child.slice(0, -real.length) + ' ' + real.slice(1);\n\t\t\t\t\twhile ( ++index!==length ) {\n\t\t\t\t\t\tconst child = children[index] ;\n\t\t\t\t\t\ttypeof child==='string'\n\t\t\t\t\t\t\t? yield child\n\t\t\t\t\t\t\t: yield * util.erase(child);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tyield util.eraseCode(child);\n\t\t\t}\n\t\t\telse { yield util.eraseRange(child); }\n\t\t}\n\t}\n\telse {\n\t\tyield child;\n\t\twhile ( ++index!==length ) {\n\t\t\tconst child = children[index] ;\n\t\t\ttypeof child==='string'\n\t\t\t\t? yield child\n\t\t\t\t: yield * util.erase(child);\n\t\t}\n\t}\n}\n",
			"import undefined from '.undefined';\n\nimport * as deps from '../../deps';\nimport * as util from '../util';\n\nexport default function * (            {\n\tpos: ts_index, end,\n\tmodifiers, asteriskToken, name, questionToken, exclamationToken, typeParameters,\n\tparameters, type, equalsGreaterThanToken, body,\n}                                                                          \n\t                             \n\t                             \n\t                             \n\t                                          \n\t                          \n\t                         \n )                                {\n\t\n\tif ( modifiers ) {\n\t\tfor ( const modifier of modifiers ) {\n\t\t\tif ( ts_index!==modifier.pos ) { yield util.slice(ts_index, modifier.pos); }\n\t\t\tswitch ( modifier.kind ) {\n\t\t\t\tcase deps.ReadonlyKeyword:\n\t\t\t\tcase deps.PrivateKeyword:\n\t\t\t\tcase deps.OverrideKeyword:\n\t\t\t\tcase deps.AbstractKeyword:\n\t\t\t\tcase deps.ProtectedKeyword:\n\t\t\t\tcase deps.PublicKeyword:\n\t\t\t\t\tyield util.eraseRange(modifier);\n\t\t\t\t\tbreak;\n\t\t\t\tcase deps.StaticKeyword:\n\t\t\t\tcase deps.AsyncKeyword:\n\t\t\t\tcase deps.ExportKeyword:///\n\t\t\t\tcase deps.ConstKeyword:///\n\t\t\t\tcase deps.DefaultKeyword:///\n\t\t\t\t\tyield util.codeOf(modifier);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow util.throwPosError(util.RealPos(modifier), `@ltd/j-ts does not know modifier ${deps.SyntaxKind[modifier.kind]}`);\n\t\t\t}\n\t\t\tts_index = modifier.end;\n\t\t}\n\t}\n\t\n\tif ( asteriskToken ) { yield util.slice(ts_index, ts_index = asteriskToken.end); }\n\t\n\tif ( name ) {\n\t\tif ( ts_index!==name.pos ) { yield util.slice(ts_index, name.pos); }\n\t\tyield * util.erase(name);\n\t\tts_index = name.end;\n\t}\n\t\n\tif ( questionToken ) { yield util.slice(ts_index, ( ts_index = questionToken.end ) - 1) + ' '; }///\n\tif ( exclamationToken ) { yield util.slice(ts_index, ( ts_index = exclamationToken.end ) - 1) + ' '; }///\n\t\n\tlet gt = false;\n\t\n\tif ( typeParameters ) {\n\t\tfor ( const typeParameter of typeParameters ) {\n\t\t\tif ( gt ) { yield util.eraseBetween(ts_index, ts_index = typeParameter.end); }\n\t\t\telse {\n\t\t\t\tyield util.slice(ts_index, ts_index = typeParameter.pos - 1) + util.eraseBetween(ts_index, ts_index = typeParameter.end);\n\t\t\t\tgt = true;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif ( parameters.length ) {\n\t\tfor ( const parameter of parameters ) {\n\t\t\tif ( gt ) {\n\t\t\t\tgt = false;\n\t\t\t\tyield util.eraseFirstGT(util.slice(ts_index, parameter.pos));\n\t\t\t}\n\t\t\telse if ( ts_index!==parameter.pos ) { yield util.slice(ts_index, parameter.pos); }\n\t\t\tif ( parameter.name.kind===deps.Identifier && parameter.name.escapedText==='this' ) {\n\t\t\t\tconst realAfterChild = util.trimBefore(util.slice(ts_index = parameter.end));\n\t\t\t\tyield util.eraseBetween(parameter.pos, realAfterChild[0]===',' ? ts_index = 1 - realAfterChild.length : ts_index);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tyield * util.erase(parameter);\n\t\t\t\tts_index = parameter.end;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif ( type ) {\n\t\tlet beforeColon = util.slice(ts_index, type.pos - 1);\n\t\tif ( gt ) {\n\t\t\tgt = false;\n\t\t\tbeforeColon = util.eraseFirstGT(beforeColon);\n\t\t}\n\t\tconst typing = util.eraseRange(type);\n\t\tlet indexAfterD                    ;\n\t\tif (\n\t\t\tequalsGreaterThanToken && (\n\t\t\t\tutil.INCLUDES_EOL(util.slice(equalsGreaterThanToken.pos, equalsGreaterThanToken.end - 2)) && util.throwPosError(type.end, `type system seems not treating EOL between \"() :Type\" and \" =>\" completely right`)\n\t\t\t\t||\n\t\t\t\tutil.INCLUDES_EOL(typing)\n\t\t\t\t||\n\t\t\t\tutil.INCLUDES_EOL(beforeColon) && util.INCLUDES_EOL(beforeColon.slice(indexAfterD = util.IndexAfterD(beforeColon)))\n\t\t\t)\n\t\t) {\n\t\t\ttype.end===equalsGreaterThanToken.pos || util.throwPosError(type.end, `@ltd/j-ts does not know how there could be a part between \"() :Type\" and \" =>\"`);\n\t\t\tyield (\n\t\t\t\tbeforeColon.slice(0, indexAfterD ?? ( indexAfterD = util.IndexAfterD(beforeColon) ))\n\t\t\t\t+\n\t\t\t\t'=>'\n\t\t\t\t+\n\t\t\t\t( beforeColon.slice(indexAfterD) + ' ' + typing ).replace(util.FIRST_MAYBE_SECOND_WHITESPACE, '')\n\t\t\t\t+\n\t\t\t\tutil.slice(equalsGreaterThanToken.pos, equalsGreaterThanToken.end - 2) + '  '\n\t\t\t);\n\t\t\tts_index = equalsGreaterThanToken.end;\n\t\t\tequalsGreaterThanToken = undefined;\n\t\t}\n\t\telse {\n\t\t\tyield beforeColon + ' ' + typing;\n\t\t\tts_index = type.end;\n\t\t}\n\t}\n\t\n\tif ( equalsGreaterThanToken ) {\n\t\tif ( gt ) {\n\t\t\tgt = false;\n\t\t\tyield util.eraseFirstGT(util.slice(ts_index, ts_index = equalsGreaterThanToken.end));\n\t\t}\n\t\telse { yield util.slice(ts_index, ts_index = equalsGreaterThanToken.end); }\n\t}\n\t\n\tif ( body ) {\n\t\tif ( gt ) {\n\t\t\tgt = false;\n\t\t\tyield util.eraseFirstGT(util.slice(ts_index, body.pos));\n\t\t}\n\t\telse if ( ts_index!==body.pos ) { yield util.slice(ts_index, body.pos); }\n\t\tyield * util.erase(body);\n\t\tts_index = body.end;\n\t}\n\t\n\tif ( ts_index!==end ) {\n\t\tyield gt\n\t\t\t? util.eraseFirstGT(util.slice(ts_index, end))\n\t\t\t: util.slice(ts_index, end);\n\t}\n\t\n}\n",
			"import * as deps from '../../deps';\nimport * as util from '../util';\n\nexport default function * (            {\n\tpos: ts_index, end,\n\tmodifiers,                name,                                  typeParameters,\n\theritageClauses, members,\n}  \n\t                       \n\t                      \n)                                {\n\t\n\tif ( modifiers ) {\n\t\tfor ( const modifier of modifiers ) {\n\t\t\tif ( ts_index!==modifier.pos ) { yield util.slice(ts_index, modifier.pos); }\n\t\t\tswitch ( modifier.kind ) {\n\t\t\t\tcase deps.AbstractKeyword:\n\t\t\t\t\tyield util.eraseRange(modifier);\n\t\t\t\t\tbreak;\n\t\t\t\tcase deps.ExportKeyword:///\n\t\t\t\tcase deps.DefaultKeyword:///\n\t\t\t\tcase deps.ConstKeyword:///\n\t\t\t\t\tyield util.codeOf(modifier);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow util.throwPosError(util.RealPos(modifier), `@ltd/j-ts does not know class modifier ${deps.SyntaxKind[modifier.kind]}`);\n\t\t\t}\n\t\t\tts_index = modifier.end;\n\t\t}\n\t}\n\t\n\tif ( name ) {\n\t\tif ( ts_index!==name.pos ) { yield util.slice(ts_index, name.pos); }\n\t\tyield * util.erase(name);\n\t\tts_index = name.end;\n\t}\n\t\n\tlet gt = false;\n\t\n\tif ( typeParameters ) {\n\t\tfor ( const typeParameter of typeParameters ) {\n\t\t\tif ( gt ) { yield util.eraseBetween(ts_index, typeParameter.end); }\n\t\t\telse {\n\t\t\t\tyield util.slice(ts_index, typeParameter.pos - 1) + util.eraseBetween(typeParameter.pos - 1, typeParameter.end);\n\t\t\t\tgt = true;\n\t\t\t}\n\t\t\tts_index = typeParameter.end;\n\t\t}\n\t}\n\t\n\tif ( heritageClauses ) {\n\t\tfor ( const { pos, token, types, end } of heritageClauses ) {\n\t\t\tif ( gt ) {\n\t\t\t\tgt = false;\n\t\t\t\tyield util.eraseFirstGT(util.slice(ts_index, pos));\n\t\t\t}\n\t\t\telse if ( ts_index!==pos ) { yield util.slice(ts_index, pos); }\n\t\t\tif ( token===deps.ExtendsKeyword ) {\n\t\t\t\ttypes.length===1 || util.throwPosError(types[1] .pos, `\"extends\" should not have ${types.length} child`);\n\t\t\t\tconst { expression } = types[0] ;\n\t\t\t\tyield util.slice(pos, expression.pos);\n\t\t\t\tyield * util.erase(expression);\n\t\t\t\tyield util.eraseBetween(expression.end, end);\n\t\t\t}\n\t\t\telse if ( token===deps.ImplementsKeyword ) {\n\t\t\t\tconst realPos = types[0] .pos - 10;\n\t\t\t\tyield util.slice(pos, realPos) + util.eraseBetween(realPos, end);\n\t\t\t}\n\t\t\telse { util.throwPosError(pos, `@ltd/j-ts does not know HeritageClause which token is ${deps.SyntaxKind[token]}`); }\n\t\t\tts_index = end;\n\t\t}\n\t}\n\t\n\tfor ( const member of members ) {\n\t\tif ( gt ) {\n\t\t\tgt = false;\n\t\t\tyield util.eraseFirstGT(util.slice(ts_index, member.pos));\n\t\t}\n\t\telse if ( ts_index!==member.pos ) { yield util.slice(ts_index, member.pos); }\n\t\tmember.kind===deps.IndexSignature\n\t\t\t? yield util.eraseRange(member)\n\t\t\t: yield * util.erase(member);\n\t\t// PropertyDeclaration\n\t\t// SemicolonClassElement\n\t\t// MethodDeclaration\n\t\t// ConstructorDeclaration\n\t\t// GetAccessorDeclaration\n\t\t// SetAccessorDeclaration\n\t\t// ClassStaticBlockDeclaration\n\t\tts_index = member.end;\n\t}\n\t\n\tif ( ts_index!==end ) {\n\t\tyield gt\n\t\t\t? util.eraseFirstGT(util.slice(ts_index, end))\n\t\t\t: util.slice(ts_index, end);\n\t}\n\t\n}\n",
			"import * as deps from '../../deps';\nimport * as util from '../util';\n\nexport default function * (            {\n\tpos: ts_index, end,\n\tmodifiers, name, questionToken, exclamationToken, type, initializer,\n}                          )                                {\n\t\n\tif ( modifiers ) {\n\t\tfor ( const modifier of modifiers ) {\n\t\t\tif ( ts_index!==modifier.pos ) { yield util.slice(ts_index, modifier.pos); }\n\t\t\tswitch ( modifier.kind ) {\n\t\t\t\tcase deps.ReadonlyKeyword:\n\t\t\t\tcase deps.PrivateKeyword:\n\t\t\t\tcase deps.OverrideKeyword:\n\t\t\t\tcase deps.ProtectedKeyword:\n\t\t\t\tcase deps.PublicKeyword:\n\t\t\t\t\tyield util.eraseRange(modifier);\n\t\t\t\t\tbreak;\n\t\t\t\tcase deps.StaticKeyword:\n\t\t\t\t\tyield util.codeOf(modifier);\n\t\t\t\t\tbreak;\n\t\t\t\tcase deps.AbstractKeyword:\n\t\t\t\t\tthrow util.throwPosError(modifier.end - 8, `@ltd/j-ts expect abstract field with declare`);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow util.throwPosError(util.RealPos(modifier), `@ltd/j-ts does not know class field modifier ${deps.SyntaxKind[modifier.kind]}`);\n\t\t\t}\n\t\t\tts_index = modifier.end;\n\t\t}\n\t}\n\t\n\t{\n\t\tif ( ts_index!==name.pos ) { yield util.slice(ts_index, name.pos); }\n\t\tyield * util.erase(name);\n\t\tts_index = name.end;\n\t}\n\t\n\tif ( questionToken ) { yield util.slice(ts_index, ( ts_index = questionToken.end ) - 1) + ' '; }\n\tif ( exclamationToken ) { yield util.slice(ts_index, ( ts_index = exclamationToken.end ) - 1) + ' '; }\n\t\n\tif ( type ) { yield util.slice(ts_index, ts_index = type.pos - 1) + util.eraseBetween(ts_index, ts_index = type.end); }\n\t\n\tif ( initializer ) {\n\t\tif ( ts_index!==initializer.pos ) { yield util.slice(ts_index, initializer.pos); }\n\t\tyield * util.erase(initializer);\n\t\tts_index = initializer.end;\n\t}\n\t\n\tif ( ts_index!==end ) { yield util.slice(ts_index, end); }\n\t\n}\n",
			"import * as deps from '../../deps';\nimport * as util from '../util';\n\nexport default function * (            {\n\tpos: ts_index, end,\n\tmodifiers, name, exclamationToken, type, initializer,\n}                          )                                {\n\t\n\tif ( modifiers ) {\n\t\tfor ( const modifier of modifiers ) {\n\t\t\tif ( ts_index!==modifier.pos ) { yield util.slice(ts_index, modifier.pos); }\n\t\t\tswitch ( modifier.kind ) {\n\t\t\t\tcase deps.ConstKeyword:///\n\t\t\t\tcase deps.ExportKeyword:///\n\t\t\t\tcase deps.DefaultKeyword:///\n\t\t\t\t\tyield util.codeOf(modifier);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow util.throwPosError(util.RealPos(modifier), `@ltd/j-ts does not know modifier ${deps.SyntaxKind[modifier.kind]}`);\n\t\t\t}\n\t\t\tts_index = modifier.end;\n\t\t}\n\t}\n\t\n\t{\n\t\tif ( ts_index!==name.pos ) { yield util.slice(ts_index, name.pos); }\n\t\tyield * util.erase(name);\n\t\tts_index = name.end;\n\t}\n\t\n\tif ( exclamationToken ) { yield util.slice(ts_index, ( ts_index = exclamationToken.end ) - 1) + ' '; }\n\t\n\tif ( type ) { yield util.slice(ts_index, ts_index = type.pos - 1) + util.eraseBetween(ts_index, ts_index = type.end); }\n\t\n\tif ( initializer ) {\n\t\tif ( ts_index!==initializer.pos ) { yield util.slice(ts_index, initializer.pos); }\n\t\tyield * util.erase(initializer);\n\t\tts_index = initializer.end;\n\t}\n\t\n\tif ( ts_index!==end ) { yield util.slice(ts_index, end); }\n\t\n}\n",
			"import * as deps from '../../deps';\nimport * as ing from '../ing';\nimport * as util from '../util';\nimport * as TSX from '../TSX/';\n\nimport eraseInsertableType from './InsertableType';\nimport eraseArgumentType from './ArgumentType';\nimport eraseFunctionType from './FunctionType';\nimport eraseClassType from './ClassType';\nimport eraseFieldType from './FieldType';\nimport eraseVariableType from './VariableType';\n\nexport default util.set_erase(erase);\nfunction * erase (            node           )                                {\n\tswitch ( node.kind ) {\n\t\t//case NamespaceExportDeclaration:\n\t\tcase deps.TypeAliasDeclaration:\n\t\tcase deps.InterfaceDeclaration:\n\t\t//case deps.ProtectedKeyword:\n\t\t//case deps.ReadonlyKeyword:\n\t\t//case deps.PrivateKeyword:\n\t\t//case deps.PublicKeyword:\n\t\t//case deps.IndexSignature:\n\t\t//case deps.AbstractKeyword:\n\t\tcase deps.ExclamationToken:///\n\t\t//case deps.OverrideKeyword:\n\t\t\treturn yield util.eraseRange(node);\n\t\tcase deps.EnumDeclaration:\n\t\t\tconst { name } = node                        ;\n\t\t\tthrow util.throwPosError(name ? name.pos - 4 : util.RealPos(node), `\"enum\" is not supported while transpileModule`);\n\t\tcase deps.ImportEqualsDeclaration:\n\t\t\tconst { moduleReference } = node                                ;\n\t\t\tthrow util.throwPosError(moduleReference ? moduleReference.pos - 1 : util.RealPos(node), `@ltd/j-ts does not support \"import=\"`);\n\t\tcase deps.ImportDeclaration:\n\t\t\tif ( ( node                           ).importClause?.isTypeOnly ) { return yield util.eraseRange(node); }\n\t\t\tbreak;\n\t\tcase deps.ExportDeclaration:\n\t\t\tif ( ( node                           ).isTypeOnly ) { return yield util.eraseRange(node); }\n\t\t\tbreak;\n\t\tcase deps.ExportAssignment:\n\t\t\tif ( ( node                          ).isExportEquals ) {\n\t\t\t\tconst { expression } = node                         ;\n\t\t\t\tutil.throwPosError(expression ? expression.pos - 1 : util.RealPos(node), `@ltd/j-ts does not support \"export=\"`);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase deps.Parameter:\n\t\t\t( node                              ).modifiers && util.throwPosError(util.RealPos(( node                              ).name ?? node), `@ltd/j-ts does not support parameter property (readonly / public / protected / private / override)`);\n\t\t\tbreak;\n\t}\n\tif ( node.modifiers ) { for ( const modifier of node.modifiers ) { if ( modifier.kind===deps.DeclareKeyword ) { return yield util.eraseRange(node); } } }\n\tnode.decorators && util.throwPosError(util.RealPos(node.decorators), `@ltd/j-ts can not handle decorator`);\n\tswitch ( node.kind ) {\n\t\tcase deps.NamedImports:\n\t\tcase deps.NamedExports:\n\t\t\tconst { elements } = node                                         ;\n\t\t\tlet ts_index = node.pos;\n\t\t\tlet isTypeOnly = false;\n\t\t\tfor ( const element of elements ) {\n\t\t\t\tyield isTypeOnly\n\t\t\t\t\t? util.eraseBetween(ts_index, element.pos)\n\t\t\t\t\t: util.slice(ts_index, element.pos);\n\t\t\t\t( isTypeOnly = element.isTypeOnly )\n\t\t\t\t\t? yield util.eraseRange(element)\n\t\t\t\t\t: yield * util.erase(element);\n\t\t\t\tts_index = element.end;\n\t\t\t}\n\t\t\tyield isTypeOnly\n\t\t\t\t? util.eraseBetween(ts_index, ts_index = elements.end) + util.slice(ts_index, node.end)\n\t\t\t\t: util.slice(ts_index, node.end);\n\t\t\treturn;\n\t\tcase deps.ModuleDeclaration:\n\t\t\tconst { name } = node                          ;\n\t\t\tthrow name\n\t\t\t\t? ing.ts.endsWith('module', name.pos)\n\t\t\t\t\t? util.throwPosError(name.pos - 6, `@ltd/j-ts does not support \"module\" (before ECMAScript proposal finished)`)\n\t\t\t\t\t: util.throwPosError(name.pos - 9, `@ltd/j-ts does not support \"namespace\"`)\n\t\t\t\t: util.throwPosError(util.RealPos(node), `@ltd/j-ts does not support \"module\" (before ECMAScript proposal finished) and \"namespace\"`);\n\t\tcase deps.CallExpression:\n\t\tcase deps.NewExpression:\n\t\tcase deps.TaggedTemplateExpression:\n\t\t\treturn yield * eraseArgumentType(node);\n\t\tcase deps.ExpressionWithTypeArguments: {\n\t\t\tconst { expression } = node                                    ;\n\t\t\tif ( node.pos!==expression.pos ) { yield util.slice(node.pos, expression.pos); }\n\t\t\tyield * util.erase(expression);\n\t\t\tyield util.eraseBetween(expression.end, node.end);\n\t\t\treturn;\n\t\t}\n\t\tcase deps.VariableDeclaration:\n\t\t\treturn yield * eraseVariableType(node                            );\n\t\tcase deps.PropertyDeclaration:\n\t\t\treturn yield * eraseFieldType(node                            );\n\t\tcase deps.ArrowFunction:\n\t\t\treturn yield * eraseFunctionType(node                      );\n\t\tcase deps.MethodDeclaration:\n\t\tcase deps.FunctionDeclaration:\n\t\t\treturn ( node                                                      ).body\n\t\t\t\t? yield * eraseFunctionType(node                                                     )\n\t\t\t\t: yield util.eraseRange(node);\n\t\tcase deps.FunctionExpression:\n\t\t\treturn yield * eraseFunctionType(node                           );\n\t\tcase deps.GetAccessor:\n\t\tcase deps.SetAccessor:\n\t\tcase deps.Constructor:\n\t\t\treturn ( node                                                                                            ).body\n\t\t\t\t? yield * eraseFunctionType(node                                                                                           )\n\t\t\t\t: yield util.eraseRange(node);\n\t\tcase deps.ClassDeclaration:\n\t\tcase deps.ClassExpression:\n\t\t\treturn yield * eraseClassType(node                                                );\n\t\tcase deps.Parameter: {\n\t\t\tconst { dotDotDotToken, name, questionToken, type, initializer } = node                             ;\n\t\t\tlet ts_index = node.pos;\n\t\t\tif ( dotDotDotToken ) {\n\t\t\t\tif ( ts_index!==dotDotDotToken.pos ) { yield util.slice(ts_index, dotDotDotToken.pos); }\n\t\t\t\tyield * util.erase(dotDotDotToken);\n\t\t\t\tts_index = dotDotDotToken.end;\n\t\t\t}\n\t\t\t{\n\t\t\t\tif ( ts_index!==name.pos ) { yield util.slice(ts_index, name.pos); }\n\t\t\t\tyield * util.erase(name);\n\t\t\t\tts_index = name.end;\n\t\t\t}\n\t\t\tif ( questionToken ) { yield util.slice(ts_index, ( ts_index = questionToken.end ) - 1) + ' '; }\n\t\t\tif ( type ) { yield util.slice(ts_index, type.pos - 1) + util.eraseBetween(type.pos - 1, ts_index = type.end); }\n\t\t\tif ( initializer ) {\n\t\t\t\tif ( ts_index!==initializer.pos ) { yield util.slice(ts_index, initializer.pos); }\n\t\t\t\tyield * util.erase(initializer);\n\t\t\t\tts_index = initializer.end;\n\t\t\t}\n\t\t\tif ( ts_index!==node.end ) { yield util.slice(ts_index, node.end); }\n\t\t\treturn;\n\t\t}\n\t\tcase deps.NonNullExpression: {\n\t\t\tconst { expression } = node                          ;\n\t\t\tif ( node.pos!==expression.pos ) { yield util.slice(node.pos, expression.pos); }\n\t\t\tyield * util.erase(expression);\n\t\t\tyield util.slice(expression.end, node.end - 1) + ' ';\n\t\t\treturn;\n\t\t}\n\t\tcase deps.AsExpression: {\n\t\t\tconst { expression, type } = node                     ;\n\t\t\tyield * util.erase(expression);\n\t\t\tyield util.slice(expression.end, type.pos - 2) + util.eraseBetween(type.pos - 2, type.end);\n\t\t\treturn;\n\t\t}\n\t}\n\tif ( TSX.ing ) {\n\t\tconst generator = TSX.handle(node);\n\t\tif ( generator ) { return yield * generator; }\n\t}\n\telse {\n\t\tswitch ( node.kind ) {\n\t\t\tcase deps.ReturnStatement:\n\t\t\t\treturn ( node                         ).expression\n\t\t\t\t\t? yield * eraseInsertableType(node                        )\n\t\t\t\t\t: yield util.codeOf(node);\n\t\t\tcase deps.ThrowStatement:\n\t\t\t\treturn yield * eraseInsertableType(node                       );\n\t\t\tcase deps.YieldExpression:\n\t\t\t\tif ( ( node                         ).expression ) {\n\t\t\t\t\tif ( ( node                         ).asteriskToken ) {\n\t\t\t\t\t\tconst { expression } = node                        ;\n\t\t\t\t\t\tyield util.slice(node.pos, expression .pos);\n\t\t\t\t\t\tyield * util.erase(expression );\n\t\t\t\t\t\tif ( expression .end!==node.end ) { yield util.slice(expression .end, node.end); }\n\t\t\t\t\t}\n\t\t\t\t\telse { yield * eraseInsertableType(node                        ); }\n\t\t\t\t}\n\t\t\t\telse { yield util.codeOf(node); }\n\t\t\t\treturn;\n\t\t\tcase deps.TypeAssertionExpression: {\n\t\t\t\tconst { type, expression } = node                      ;\n\t\t\t\tyield util.slice(node.pos, type.pos - 1) + util.eraseBetween(type.pos - 1, type.end) + util.slice(type.end, expression.pos - 1) + ' ';\n\t\t\t\tyield * util.erase(expression);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\tlet ts_index = node.pos;\n\tconst childNodes = util.ChildNodes(node);\n\tif ( childNodes ) {\n\t\tfor ( const child of childNodes ) {\n\t\t\tif ( ts_index!==child.pos ) { yield util.slice(ts_index, child.pos); }\n\t\t\tyield * util.erase(child);\n\t\t\tts_index = child.end;\n\t\t}\n\t}\n\tif ( ts_index!==node.end ) { yield util.slice(ts_index, node.end); }\n}\n",
			"import TypeError from '.TypeError';\nimport undefined from '.undefined';\n\nimport * as deps from '../deps';\nimport * as ing from './ing';\nimport * as util from './util';\nimport * as TSX from './TSX/';\nimport erase from './erase/';\n\nconst OutputText = (fileName        , X         )         => [ ...erase(deps.createSourceFile(fileName, ing.ts, deps.ESNext, false, X ? deps.TSX : deps.TS)) ].join('');\n\nexport default (input        , jsx_transpileOptions                                                  \n\t                            \n\t\t                             \n\t\t                                            \n\t\t                                  \n\t\t                             \n\t\t                                     \n\t\t                                 \n\t\t                                           \n\t\t                                      \n\t\t                                          \n\t \n  = false, fileName         )                                                                     => {\n\ting.on();\n\ttry {\n\t\ting.set_ts(input);\n\t\tif ( typeof jsx_transpileOptions==='object' ) {\n\t\t\tconst compilerOptions = jsx_transpileOptions?.compilerOptions;\n\t\t\tconst sourceMap = compilerOptions?.sourceMap;\n\t\t\tif ( sourceMap!==undefined && sourceMap!==false ) { throw TypeError(`transpileModule(,{compilerOptions:{sourceMap:!false}})`); }\n\t\t\tlet X         ;\n\t\t\tconst jsX = compilerOptions?.jsx                               ;\n\t\t\tswitch ( typeof jsX==='string' ? util.A2a(jsX) : jsX ) {\n\t\t\t\tcase undefined:\n\t\t\t\tcase deps.None:\n\t\t\t\t\tX = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase deps.Preserve:\n\t\t\t\tcase deps.ReactNative:\n\t\t\t\tcase 'preserve':\n\t\t\t\tcase 'react-native':\n\t\t\t\t\tTSX.onJSX();\n\t\t\t\t\tX = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase deps.React:\n\t\t\t\tcase 'react':\n\t\t\t\t\tif ( compilerOptions?.jsxImportSource!==undefined ) { throw TypeError(`transpileModule(,{compilerOptions:{jsx:'react',jsxImportSource:!undefined}})`); }\n\t\t\t\t\tTSX.onJS$(compilerOptions);\n\t\t\t\t\tX = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase deps.ReactJSX:\n\t\t\t\tcase 'react-jsx':\n\t\t\t\t\tthrow TypeError(`transpileModule(,{compilerOptions:{jsx:'react-jsx'}})`);\n\t\t\t\tcase deps.ReactJSXDev:\n\t\t\t\tcase 'react-jsxdev':\n\t\t\t\t\tthrow TypeError(`transpileModule(,{compilerOptions:{jsx:'react-jsxdev'}})`);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow TypeError('transpileModule(,{compilerOptions:{jsx:unknown}})');\n\t\t\t}\n\t\t\tconst useDefineForClassFields = compilerOptions?.useDefineForClassFields;\n\t\t\tif ( useDefineForClassFields!==undefined && useDefineForClassFields!==true ) { throw TypeError(`transpileModule(,{compilerOptions:{useDefineForClassFields:!true}})`); }\n\t\t\tconst downlevelIteration = compilerOptions?.downlevelIteration;\n\t\t\tif ( downlevelIteration!==undefined && downlevelIteration!==false ) { throw TypeError(`transpileModule(,{compilerOptions:{downlevelIteration:!false}})`); }\n\t\t\tconst experimentalDecorators = compilerOptions?.experimentalDecorators;\n\t\t\tif ( experimentalDecorators!==undefined && experimentalDecorators!==false ) { throw TypeError(`transpileModule(,{compilerOptions:{experimentalDecorators:!false}})`); }\n\t\t\ting.set_filename(fileName);\n\t\t\tconst { diagnostics } = deps.TypeScript_transpileModule(ing.ts, jsx_transpileOptions);\n\t\t\treturn {\n\t\t\t\tdiagnostics,\n\t\t\t\toutputText: OutputText(typeof fileName==='string' ? fileName : '', X),\n\t\t\t\tsourceMapText: undefined,\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tif ( typeof jsx_transpileOptions==='function' ) {\n\t\t\t\tTSX.onJS(jsx_transpileOptions);\n\t\t\t\tjsx_transpileOptions = true;\n\t\t\t}\n\t\t\telse { jsx_transpileOptions && TSX.onJSX(); }\n\t\t\ting.set_filename(fileName);\n\t\t\treturn OutputText('', jsx_transpileOptions);\n\t\t}\n\t}\n\tfinally {\n\t\tTSX.off();\n\t\ting.off();\n\t}\n};\n",
			"import version from './version?text';\nimport transpileModule from './transpileModule/';\nimport Default from '.default';\nexport default Default(transpileModule, {\n\ttranspileModule,\n\tversion,\n});"
		],
	"names":
		["StringLiteral","ing","on","Error","TypeError","undefined","off","erase","ing.ts","ing.filename","deps.forEachChild","Children","util.slice","util.trimBefore","util.throwPosError","deps.JsxClosingElement","deps.JsxOpeningElement","deps.JsxSelfClosingElement","deps.JsxOpeningFragment","deps.JsxClosingFragment","Generator","SelfClosingElementGenerator","deps.JsxElement","ElementGenerator","deps.JsxFragment","FragmentGenerator","util.codeOf","Opening","util.eraseBetween","Attributes","deps.JsxText","deps.JsxExpression","util.erase","deps.SyntaxKind","deps.JsxSpreadAttribute","deps.JsxAttribute","util.RealPos","deps.BinaryExpression","deps.CommaToken","util.INDEX_OF_EOL","util.eraseCode","util.min","util.INCLUDES_EOL","util.readAT","util.TAB_INDENT","util.SPACE_INDENT","deps.ObjectLiteralExpression","deps.ShorthandPropertyAssignment","deps.SpreadAssignment","deps.MethodDeclaration","deps.PropertyAssignment","deps.ComputedPropertyName","deps.StringLiteral","deps.Identifier","deps.GetAccessor","deps.SetAccessor","JSX.Generator","JS.on$","JS.Generator","JS.on","JS.off","deps.TypeAssertionExpression","deps.YieldExpression","util.eraseRange","util.WHITESPACES_AND_COMMENT","util.CHAR_NOT_EOL","deps.ThrowStatement","util.Children","deps.NewExpression","deps.ReadonlyKeyword","deps.PrivateKeyword","deps.OverrideKeyword","deps.AbstractKeyword","deps.ProtectedKeyword","deps.PublicKeyword","deps.StaticKeyword","deps.AsyncKeyword","deps.ExportKeyword","deps.ConstKeyword","deps.DefaultKeyword","util.eraseFirstGT","util.IndexAfterD","util.FIRST_MAYBE_SECOND_WHITESPACE","deps.ExtendsKeyword","deps.ImplementsKeyword","deps.IndexSignature","util.set_erase","deps.TypeAliasDeclaration","deps.InterfaceDeclaration","deps.ExclamationToken","deps.EnumDeclaration","deps.ImportEqualsDeclaration","deps.ImportDeclaration","deps.ExportDeclaration","deps.ExportAssignment","deps.Parameter","deps.DeclareKeyword","deps.NamedImports","deps.NamedExports","deps.ModuleDeclaration","deps.CallExpression","deps.TaggedTemplateExpression","deps.ExpressionWithTypeArguments","deps.VariableDeclaration","deps.PropertyDeclaration","deps.ArrowFunction","deps.FunctionDeclaration","deps.FunctionExpression","deps.Constructor","deps.ClassDeclaration","deps.ClassExpression","deps.NonNullExpression","deps.AsExpression","TSX.ing","TSX.handle","deps.ReturnStatement","util.ChildNodes","deps.createSourceFile","deps.ESNext","deps.TSX","deps.TS","ing.on","ing.set_ts","util.A2a","deps.None","deps.Preserve","deps.ReactNative","TSX.onJSX","deps.React","TSX.onJS$","deps.ReactJSX","deps.ReactJSXDev","ing.set_filename","deps.TypeScript_transpileModule","TSX.onJS","TSX.off","ing.off"],
	"mappings":
		"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"
}